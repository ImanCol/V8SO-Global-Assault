Shader "Unlit/RainyLava"
{
    Properties
    {
        _MainTex("Texture", 2D) = "white" {}
        _LavaTex("Lava Texture", 2D) = "white" {}
        _WaveHeight("Wave Height", Range(0.0, 1.0)) = 0.1
        _RainSpeed("Rain Speed", Range(0, 10.0)) = 1.0
        _RainStrength("Rain Strength", Range(0, 1)) = 0.5
        _LavaStrength("Lava Strength", Range(0, 1)) = 0.5
        _LavaIntensity("Lava Intensity", Range(0, 1)) = 0.5
    }

    SubShader
    {
        Tags{ "RenderType"="Opaque" }

        Pass
        {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"
            
            uniform sampler2D _MainTex;
            uniform sampler2D _LavaTex;
            uniform float _WaveHeight;
            uniform float _RainSpeed;
            uniform float _RainStrength;
            uniform float _LavaStrength;
            uniform float _LavaIntensity;
            
            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
            };

            struct v2f
            {
                float2 uv : TEXCOORD0;
                float4 vertex : SV_POSITION;
            };

            v2f vert(appdata v)
            {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = v.uv;
                return o;
            }

            fixed4 frag(v2f i) : SV_Target
            {
                fixed4 col = tex2D(_MainTex, i.uv);

                float time = _Time.y * _RainSpeed;
                float2 p = i.uv + float2(0, time * 0.05);
                float2 p1 = i.uv + float2(0, time * 0.05 + 0.1);
                float2 p2 = i.uv + float2(0, time * 0.05 - 0.1);
                float4 rain = (tex2D(_MainTex, p1) - tex2D(_MainTex, p2)) * _RainStrength;
                float3 finalColor = col.rgb + rain.rgb;

                float2 distortedUV = i.uv + float2(sin(i.uv.y * 15 + time) * _WaveHeight, 0);
                float4 lava = tex2D(_LavaTex, distortedUV) * _LavaIntensity;
                finalColor = lerp(finalColor, lava.rgb, _LavaStrength);
                    
                return float4(finalColor, col.a);
            }
            ENDCG
        }
    }

    FallBack "Diffuse"
}