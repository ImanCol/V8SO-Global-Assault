using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public struct VehicleData
{
    public short[] unk0x0; //0x00
    public byte unk0xC; //0x0C
    public _VEHICLE vehicleID; //0x0D
    public sbyte unk0xE; //0x0E
    public sbyte unk0xF; //0x0F
    public byte unk0x10; //0x10
    public byte unk0x11; //0x11
    public byte unk0x12; //0x12
    public byte unk0x13; //0x13
    public byte unk0x15; //0x15
    public ushort maxHalfHealth; //0x18
    public int lightness; //0x1C
    public Vector3Int vectorUnk; //0x24
    public short unk0x2A; //0x2A
    public byte[] unk0x2C; //0x2C
}

public enum _GAME_MODE
{
    Quest,
    Arcade,
    Alone,
    Survival,
    Demo,
    Versus,
    Coop,
    Quest2
}

public enum _SCREEN_MODE
{
    Whole,
    Horizontal,
    Vertical
}

public class GameManager : MonoBehaviour
{
    public static GameManager instance;
    public static int translateFactor = 10000;

    public static short[] SQRT =
    {
        4096, 4127, 4159, 4190, 4222, 4252, 4283, 4314, 4344, 4374, 4404,
        4434, 4463, 4492, 4521, 4550, 4579, 4608, 4636, 4664, 4692, 4720,
        4748, 4775, 4802, 4830, 4857, 4884, 4910, 4937, 4964, 4990, 5016,
        5042, 5068, 5094, 5120, 5145, 5170, 5196, 5221, 5246, 5271, 5296,
        5320, 5345, 5369, 5394, 5418, 5442, 5466, 5490, 5514, 5538, 5561,
        5585, 5608, 5632, 5655, 5678, 5701, 5724, 5747, 5769, 5792, 5815,
        5837, 5860, 5882, 5904, 5926, 5948, 5970, 5992, 6014, 6036, 6058,
        6079, 6101, 6122, 6144, 6165, 6186, 6207, 6228, 6249, 6270, 6291,
        6312, 6333, 6353, 6374, 6394, 6415, 6435, 6456, 6476, 6496, 6516,
        6536, 6556, 6576, 6596, 6616, 6636, 6656, 6675, 6695, 6714, 6734,
        6753, 6773, 6792, 6811, 6830, 6850, 6869, 6888, 6907, 6926, 6945,
        6963, 6982, 7001, 7020, 7038, 7057, 7075, 7094, 7112, 7131, 7149,
        7168, 7186, 7204, 7222, 7240, 7258, 7276, 7294, 7312, 7330, 7348,
        7366, 7384, 7401, 7419, 7437, 7454, 7472, 7489, 7507, 7524, 7542,
        7559, 7576, 7594, 7611, 7628, 7645, 7662, 7680, 7697, 7714, 7731,
        7747, 7764, 7781, 7798, 7815, 7832, 7848, 7865, 7882, 7898, 7915,
        7931, 7948, 7964, 7981, 7997, 8014, 8030, 8046, 8062, 8079, 8095,
        8111, 8127, 8143, 8159, 8175
    };
    public static short[] UNK4 =
    {
        4096, 4064, 4033, 4003, 3973, 3944, 3916, 3888, 3861, 3835, 3809,
        3783, 3758, 3734, 3710, 3686, 3663, 3640, 3618, 3596, 3575, 3554,
        3533, 3513, 3493, 3473, 3454, 3435, 3416, 3397, 3379, 3361, 3344,
        3327, 3310, 3293, 3276, 3260, 3244, 3228, 3213, 3197, 3182, 3167,
        3153, 3138, 3124, 3110, 3096, 3082, 3069, 3055, 3042, 3029, 3016,
        3003, 2991, 2978, 2966, 2954, 2942, 2930, 2919, 2907, 2896, 2885,
        2873, 2862, 2852, 2841, 2830, 2820, 2809, 2799, 2789, 2779, 2769,
        2759, 2749, 2740, 2730, 2721, 2711, 2702, 2693, 2684, 2675, 2666,
        2657, 2649, 2640, 2631, 2623, 2615, 2606, 2598, 2590, 2582, 2574,
        2566, 2558, 2550, 2543, 2535, 2528, 2520, 2513, 2505, 2498, 2491,
        2484, 2477, 2469, 2462, 2456, 2449, 2442, 2435, 2428, 2422, 2415,
        2409, 2402, 2396, 2389, 2383, 2377, 2371, 2364, 2358, 2352, 2346,
        2340, 2334, 2328, 2322, 2317, 2311, 2305, 2299, 2294, 2288, 2283,
        2277, 2272, 2266, 2261, 2255, 2250, 2245, 2239, 2234, 2229, 2224,
        2219, 2214, 2209, 2204, 2199, 2194, 2189, 2184, 2179, 2174, 2170,
        2165, 2160, 2155, 2151, 2146, 2142, 2137, 2133, 2128, 2124, 2119,
        2115, 2110, 2106, 2102, 2097, 2093, 2089, 2084, 2080, 2076, 2072,
        2068, 2064, 2060, 2056, 2052
    };
    public static short[] DAT_65C90 =
    {
        0, 4096, 6, 4096, 13, 4096, 19, 4096, 25, 4096, 31, 4096, 38, 4096,
        44, 4096, 50, 4096, 57, 4096, 63, 4096, 69, 4095, 75, 4095, 82, 4095,
        88, 4095, 94, 4095, 101, 4095, 107, 4095, 113, 4094, 119, 4094, 126,
        4094, 132, 4094, 138, 4094, 144, 4093, 151, 4093, 157, 4093, 163, 4093,
        170, 4092, 176, 4092, 182, 4092, 188, 4092, 195, 4091, 201, 4091, 207,
        4091, 214, 4090, 220, 4090, 226, 4090, 232, 4089, 239, 4089, 245, 4089,
        251, 4088, 257, 4088, 264, 4088, 270, 4087, 276, 4087, 283, 4086, 289,
        4086, 295, 4085, 301, 4085, 308, 4084, 314, 4084, 320, 4083, 326, 4083,
        333, 4082, 339, 4082, 345, 4081, 351, 4081, 358, 4080, 364, 4080, 370,
        4079, 376, 4079, 383, 4078, 389, 4077, 395, 4077, 401, 4076, 408, 4076,
        414, 4075, 420, 4074, 426, 4074, 433, 4073, 439, 4072, 445, 4072, 451,
        4071, 458, 4070, 464, 4070, 470, 4069, 476, 4068, 483, 4067, 489, 4067,
        495, 4066, 501, 4065, 508, 4064, 514, 4064, 520, 4063, 526, 4062, 533,
        4061, 539, 4060, 545, 4060, 551, 4059, 557, 4058, 564, 4057, 570, 4056,
        576, 4055, 582, 4054, 589, 4053, 595, 4053, 601, 4052, 607, 4051, 613,
        4050, 620, 4049, 626, 4048, 632, 4047, 638, 4046, 644, 4045, 651, 4044,
        657, 4043, 663, 4042, 669, 4041, 675, 4040, 682, 4039, 688, 4038, 694,
        4037, 700, 4036, 706, 4035, 713, 4034, 719, 4032, 725, 4031, 731, 4030,
        737, 4029, 744, 4028, 750, 4027, 756, 4026, 762, 4024, 768, 4023, 774,
        4022, 781, 4021, 787, 4020, 793, 4019, 799, 4017, 805, 4016, 811, 4015,
        818, 4014, 824, 4012, 830, 4011, 836, 4010, 842, 4008, 848, 4007, 854,
        4006, 861, 4005, 867, 4003, 873, 4002, 879, 4001, 885, 3999, 891, 3998,
        897, 3996, 904, 3995, 910, 3994, 916, 3992, 922, 3991, 928, 3989, 934,
        3988, 940, 3987, 946, 3985, 953, 3984, 959, 3982, 965, 3981, 971, 3979,
        977, 3978, 983, 3976, 989, 3975, 995, 3973, 1001, 3972, 1007, 3970, 1014,
        3969, 1020, 3967, 1026, 3965, 1032, 3964, 1038, 3962, 1044, 3961, 1050,
        3959, 1056, 3958, 1062, 3956, 1068, 3954, 1074, 3953, 1080, 3951, 1086,
        3949, 1092, 3948, 1099, 3946, 1105, 3944, 1111, 3943, 1117, 3941, 1123,
        3939, 1129, 3937, 1135, 3936, 1141, 3934, 1147, 3932, 1153, 3930, 1159,
        3929, 1165, 3927, 1171, 3925, 1177, 3923, 1183, 3921, 1189, 3920, 1195,
        3918, 1201, 3916, 1207, 3914, 1213, 3912, 1219, 3910, 1225, 3909, 1231,
        3907, 1237, 3905, 1243, 3903, 1249, 3901, 1255, 3899, 1261, 3897, 1267,
        3895, 1273, 3893, 1279, 3891, 1285, 3889, 1291, 3887, 1297, 3885, 1303,
        3883, 1309, 3881, 1315, 3879, 1321, 3877, 1327, 3875, 1332, 3873, 1338,
        3871, 1344, 3869, 1350, 3867, 1356, 3865, 1362, 3863, 1368, 3861, 1374,
        3859, 1380, 3857, 1386, 3854, 1392, 3852, 1398, 3850, 1404, 3848, 1409,
        3846, 1415, 3844, 1421, 3842, 1427, 3839, 1433, 3837, 1439, 3835, 1445,
        3833, 1451, 3831, 1457, 3828, 1462, 3826, 1468, 3824, 1474, 3822, 1480,
        3819, 1486, 3817, 1492, 3815, 1498, 3812, 1503, 3810, 1509, 3808, 1515,
        3805, 1521, 3803, 1527, 3801, 1533, 3798, 1538, 3796, 1544, 3794, 1550,
        3791, 1556, 3789, 1562, 3787, 1567, 3784, 1573, 3782, 1579, 3779, 1585,
        3777, 1591, 3775, 1596, 3772, 1602, 3770, 1608, 3767, 1614, 3765, 1620,
        3762, 1625, 3760, 1631, 3757, 1637, 3755, 1643, 3752, 1648, 3750, 1654,
        3747, 1660, 3745, 1666, 3742, 1671, 3739, 1677, 3737, 1683, 3734, 1689,
        3732, 1694, 3729, 1700, 3727, 1706, 3724, 1711, 3721, 1717, 3719, 1723,
        3716, 1729, 3713, 1734, 3711, 1740, 3708, 1746, 3705, 1751, 3703, 1757,
        3700, 1763, 3697, 1768, 3695, 1774, 3692, 1780, 3689, 1785, 3686, 1791,
        3684, 1797, 3681, 1802, 3678, 1808, 3675, 1813, 3673, 1819, 3670, 1825,
        3667, 1830, 3664, 1836, 3661, 1842, 3659, 1847, 3656, 1853, 3653, 1858,
        3650, 1864, 3647, 1870, 3644, 1875, 3642, 1881, 3639, 1886, 3636, 1892,
        3633, 1898, 3630, 1903, 3627, 1909, 3624, 1914, 3621, 1920, 3618, 1925,
        3615, 1931, 3612, 1936, 3609, 1942, 3606, 1947, 3603, 1953, 3600, 1958,
        3597, 1964, 3594, 1970, 3591, 1975, 3588, 1981, 3585, 1986, 3582, 1992,
        3579, 1997, 3576, 2002, 3573, 2008, 3570, 2013, 3567, 2019, 3564, 2024,
        3561, 2030, 3558, 2035, 3555, 2041, 3551, 2046, 3548, 2052, 3545, 2057,
        3542, 2062, 3539, 2068, 3536, 2073, 3532, 2079, 3529, 2084, 3526, 2090,
        3523, 2095, 3520, 2100, 3516, 2106, 3513, 2111, 3510, 2117, 3507, 2122,
        3504, 2127, 3500, 2133, 3497, 2138, 3494, 2143, 3490, 2149, 3487, 2154,
        3484, 2159, 3481, 2165, 3477, 2170, 3474, 2175, 3471, 2181, 3467, 2186,
        3464, 2191, 3461, 2197, 3457, 2202, 3454, 2207, 3450, 2213, 3447, 2218,
        3444, 2223, 3440, 2228, 3437, 2234, 3433, 2239, 3430, 2244, 3426, 2249,
        3423, 2255, 3420, 2260, 3416, 2265, 3413, 2270, 3409, 2276, 3406, 2281,
        3402, 2286, 3399, 2291, 3395, 2296, 3392, 2302, 3388, 2307, 3385, 2312,
        3381, 2317, 3378, 2322, 3374, 2328, 3370, 2333, 3367, 2338, 3363, 2343,
        3360, 2348, 3356, 2353, 3352, 2359, 3349, 2364, 3345, 2369, 3342, 2374,
        3338, 2379, 3334, 2384, 3331, 2389, 3327, 2394, 3323, 2399, 3320, 2405,
        3316, 2410, 3312, 2415, 3309, 2420, 3305, 2425, 3301, 2430, 3297, 2435,
        3294, 2440, 3290, 2445, 3286, 2450, 3282, 2455, 3279, 2460, 3275, 2465,
        3271, 2470, 3267, 2475, 3264, 2480, 3260, 2485, 3256, 2490, 3252, 2495,
        3248, 2500, 3244, 2505, 3241, 2510, 3237, 2515, 3233, 2520, 3229, 2525,
        3225, 2530, 3221, 2535, 3217, 2540, 3214, 2545, 3210, 2550, 3206, 2555,
        3202, 2559, 3198, 2564, 3194, 2569, 3190, 2574, 3186, 2579, 3182, 2584,
        3178, 2589, 3174, 2594, 3170, 2598, 3166, 2603, 3162, 2608, 3158, 2613,
        3154, 2618, 3150, 2623, 3146, 2628, 3142, 2632, 3138, 2637, 3134, 2642,
        3130, 2647, 3126, 2652, 3122, 2656, 3118, 2661, 3114, 2666, 3110, 2671,
        3106, 2675, 3102, 2680, 3097, 2685, 3093, 2690, 3089, 2694, 3085, 2699,
        3081, 2704, 3077, 2709, 3073, 2713, 3068, 2718, 3064, 2723, 3060, 2727,
        3056, 2732, 3052, 2737, 3048, 2741, 3043, 2746, 3039, 2751, 3035, 2755,
        3031, 2760, 3026, 2765, 3022, 2769, 3018, 2774, 3014, 2779, 3009, 2783,
        3005, 2788, 3001, 2792, 2997, 2797, 2992, 2802, 2988, 2806, 2984, 2811,
        2979, 2815, 2975, 2820, 2971, 2824, 2967, 2829, 2962, 2833, 2958, 2838,
        2953, 2843, 2949, 2847, 2945, 2852, 2940, 2856, 2936, 2861, 2932, 2865,
        2927, 2870, 2923, 2874, 2918, 2878, 2914, 2883, 2910, 2887, 2905, 2892,
        2901, 2896, 2896, 2901, 2892, 2905, 2887, 2910, 2883, 2914, 2878, 2918,
        2874, 2923, 2870, 2927, 2865, 2932, 2861, 2936, 2856, 2940, 2852, 2945,
        2847, 2949, 2843, 2953, 2838, 2958, 2833, 2962, 2829, 2967, 2824, 2971,
        2820, 2975, 2815, 2979, 2811, 2984, 2806, 2988, 2802, 2992, 2797, 2997,
        2792, 3001, 2788, 3005, 2783, 3009, 2779, 3014, 2774, 3018, 2769, 3022,
        2765, 3026, 2760, 3031, 2755, 3035, 2751, 3039, 2746, 3043, 2741, 3048,
        2737, 3052, 2732, 3056, 2727, 3060, 2723, 3064, 2718, 3068, 2713, 3073,
        2709, 3077, 2704, 3081, 2699, 3085, 2694, 3089, 2690, 3093, 2685, 3097,
        2680, 3102, 2675, 3106, 2671, 3110, 2666, 3114, 2661, 3118, 2656, 3122,
        2652, 3126, 2647, 3130, 2642, 3134, 2637, 3138, 2632, 3142, 2628, 3146,
        2623, 3150, 2618, 3154, 2613, 3158, 2608, 3162, 2603, 3166, 2598, 3170,
        2594, 3174, 2589, 3178, 2584, 3182, 2579, 3186, 2574, 3190, 2569, 3194,
        2564, 3198, 2559, 3202, 2555, 3206, 2550, 3210, 2545, 3214, 2540, 3217,
        2535, 3221, 2530, 3225, 2525, 3229, 2520, 3233, 2515, 3237, 2510, 3241,
        2505, 3244, 2500, 3248, 2495, 3252, 2490, 3256, 2485, 3260, 2480, 3264,
        2475, 3267, 2470, 3271, 2465, 3275, 2460, 3279, 2455, 3282, 2450, 3286,
        2445, 3290, 2440, 3294, 2435, 3297, 2430, 3301, 2425, 3305, 2420, 3309,
        2415, 3312, 2410, 3316, 2405, 3320, 2399, 3323, 2394, 3327, 2389, 3331,
        2384, 3334, 2379, 3338, 2374, 3342, 2369, 3345, 2364, 3349, 2359, 3352,
        2353, 3356, 2348, 3360, 2343, 3363, 2338, 3367, 2333, 3370, 2328, 3374,
        2322, 3378, 2317, 3381, 2312, 3385, 2307, 3388, 2302, 3392, 2296, 3395,
        2291, 3399, 2286, 3402, 2281, 3406, 2276, 3409, 2270, 3413, 2265, 3416,
        2260, 3420, 2255, 3423, 2249, 3426, 2244, 3430, 2239, 3433, 2234, 3437,
        2228, 3440, 2223, 3444, 2218, 3447, 2213, 3450, 2207, 3454, 2202, 3457,
        2197, 3461, 2191, 3464, 2186, 3467, 2181, 3471, 2175, 3474, 2170, 3477,
        2165, 3481, 2159, 3484, 2154, 3487, 2149, 3490, 2143, 3494, 2138, 3497,
        2133, 3500, 2127, 3504, 2122, 3507, 2117, 3510, 2111, 3513, 2106, 3516,
        2100, 3520, 2095, 3523, 2090, 3526, 2084, 3529, 2079, 3532, 2073, 3536,
        2068, 3539, 2062, 3542, 2057, 3545, 2052, 3548, 2046, 3551, 2041, 3555,
        2035, 3558, 2030, 3561, 2024, 3564, 2019, 3567, 2013, 3570, 2008, 3573,
        2002, 3576, 1997, 3579, 1992, 3582, 1986, 3585, 1981, 3588, 1975, 3591,
        1970, 3594, 1964, 3597, 1958, 3600, 1953, 3603, 1947, 3606, 1942, 3609,
        1936, 3612, 1931, 3615, 1925, 3618, 1920, 3621, 1914, 3624, 1909, 3627,
        1903, 3630, 1898, 3633, 1892, 3636, 1886, 3639, 1881, 3642, 1875, 3644,
        1870, 3647, 1864, 3650, 1858, 3653, 1853, 3656, 1847, 3659, 1842, 3661,
        1836, 3664, 1830, 3667, 1825, 3670, 1819, 3673, 1813, 3675, 1808, 3678,
        1802, 3681, 1797, 3684, 1791, 3686, 1785, 3689, 1780, 3692, 1774, 3695,
        1768, 3697, 1763, 3700, 1757, 3703, 1751, 3705, 1746, 3708, 1740, 3711,
        1734, 3713, 1729, 3716, 1723, 3719, 1717, 3721, 1711, 3724, 1706, 3727,
        1700, 3729, 1694, 3732, 1689, 3734, 1683, 3737, 1677, 3739, 1671, 3742,
        1666, 3745, 1660, 3747, 1654, 3750, 1648, 3752, 1643, 3755, 1637, 3757,
        1631, 3760, 1625, 3762, 1620, 3765, 1614, 3767, 1608, 3770, 1602, 3772,
        1596, 3775, 1591, 3777, 1585, 3779, 1579, 3782, 1573, 3784, 1567, 3787,
        1562, 3789, 1556, 3791, 1550, 3794, 1544, 3796, 1538, 3798, 1533, 3801,
        1527, 3803, 1521, 3805, 1515, 3808, 1509, 3810, 1503, 3812, 1498, 3815,
        1492, 3817, 1486, 3819, 1480, 3822, 1474, 3824, 1468, 3826, 1462, 3828,
        1457, 3831, 1451, 3833, 1445, 3835, 1439, 3837, 1433, 3839, 1427, 3842,
        1421, 3844, 1415, 3846, 1409, 3848, 1404, 3850, 1398, 3852, 1392, 3854,
        1386, 3857, 1380, 3859, 1374, 3861, 1368, 3863, 1362, 3865, 1356, 3867,
        1350, 3869, 1344, 3871, 1338, 3873, 1332, 3875, 1327, 3877, 1321, 3879,
        1315, 3881, 1309, 3883, 1303, 3885, 1297, 3887, 1291, 3889, 1285, 3891,
        1279, 3893, 1273, 3895, 1267, 3897, 1261, 3899, 1255, 3901, 1249, 3903,
        1243, 3905, 1237, 3907, 1231, 3909, 1225, 3910, 1219, 3912, 1213, 3914,
        1207, 3916, 1201, 3918, 1195, 3920, 1189, 3921, 1183, 3923, 1177, 3925,
        1171, 3927, 1165, 3929, 1159, 3930, 1153, 3932, 1147, 3934, 1141, 3936,
        1135, 3937, 1129, 3939, 1123, 3941, 1117, 3943, 1111, 3944, 1105, 3946,
        1099, 3948, 1092, 3949, 1086, 3951, 1080, 3953, 1074, 3954, 1068, 3956,
        1062, 3958, 1056, 3959, 1050, 3961, 1044, 3962, 1038, 3964, 1032, 3965,
        1026, 3967, 1020, 3969, 1014, 3970, 1007, 3972, 1001, 3973, 995, 3975,
        989, 3976, 983, 3978, 977, 3979, 971, 3981, 965, 3982, 959, 3984, 953,
        3985, 946, 3987, 940, 3988, 934, 3989, 928, 3991, 922, 3992, 916, 3994,
        910, 3995, 904, 3996, 897, 3998, 891, 3999, 885, 4001, 879, 4002, 873,
        4003, 867, 4005, 861, 4006, 854, 4007, 848, 4008, 842, 4010, 836, 4011,
        830, 4012, 824, 4014, 818, 4015, 811, 4016, 805, 4017, 799, 4019, 793,
        4020, 787, 4021, 781, 4022, 774, 4023, 768, 4024, 762, 4026, 756, 4027,
        750, 4028, 744, 4029, 737, 4030, 731, 4031, 725, 4032, 719, 4034, 713,
        4035, 706, 4036, 700, 4037, 694, 4038, 688, 4039, 682, 4040, 675, 4041,
        669, 4042, 663, 4043, 657, 4044, 651, 4045, 644, 4046, 638, 4047, 632,
        4048, 626, 4049, 620, 4050, 613, 4051, 607, 4052, 601, 4053, 595, 4053,
        589, 4054, 582, 4055, 576, 4056, 570, 4057, 564, 4058, 557, 4059, 551,
        4060, 545, 4060, 539, 4061, 533, 4062, 526, 4063, 520, 4064, 514, 4064,
        508, 4065, 501, 4066, 495, 4067, 489, 4067, 483, 4068, 476, 4069, 470,
        4070, 464, 4070, 458, 4071, 451, 4072, 445, 4072, 439, 4073, 433, 4074,
        426, 4074, 420, 4075, 414, 4076, 408, 4076, 401, 4077, 395, 4077, 389,
        4078, 383, 4079, 376, 4079, 370, 4080, 364, 4080, 358, 4081, 351, 4081,
        345, 4082, 339, 4082, 333, 4083, 326, 4083, 320, 4084, 314, 4084, 308,
        4085, 301, 4085, 295, 4086, 289, 4086, 283, 4087, 276, 4087, 270, 4088,
        264, 4088, 257, 4088, 251, 4089, 245, 4089, 239, 4089, 232, 4090, 226,
        4090, 220, 4090, 214, 4091, 207, 4091, 201, 4091, 195, 4092, 188, 4092,
        182, 4092, 176, 4092, 170, 4093, 163, 4093, 157, 4093, 151, 4093, 144,
        4094, 138, 4094, 132, 4094, 126, 4094, 119, 4094, 113, 4095, 107, 4095,
        101, 4095, 94, 4095, 88, 4095, 82, 4095, 75, 4095, 69, 4096, 63, 4096,
        57, 4096, 50, 4096, 44, 4096, 38, 4096, 31, 4096, 25, 4096, 19, 4096,
        13, 4096, 6, 4096, 0, 4096, -6, 4096, -13, 4096, -19, 4096, -25, 4096,
        -31, 4096, -38, 4096, -44, 4096, -50, 4096, -57, 4096, -63, 4095, -69,
        4095, -75, 4095, -82, 4095, -88, 4095, -94, 4095, -101, 4095, -107,
        4094, -113, 4094, -119, 4094, -126, 4094, -132, 4094, -138, 4093, -144,
        4093, -151, 4093, -157, 4093, -163, 4092, -170, 4092, -176, 4092, -182,
        4092, -188, 4091, -195, 4091, -201, 4091, -207, 4090, -214, 4090, -220,
        4090, -226, 4089, -232, 4089, -239, 4089, -245, 4088, -251, 4088, -257,
        4088, -264, 4087, -270, 4087, -276, 4086, -283, 4086, -289, 4085, -295,
        4085, -301, 4084, -308, 4084, -314, 4083, -320, 4083, -326, 4082, -333,
        4082, -339, 4081, -345, 4081, -351, 4080, -358, 4080, -364, 4079, -370,
        4079, -376, 4078, -383, 4077, -389, 4077, -395, 4076, -401, 4076, -408,
        4075, -414, 4074, -420, 4074, -426, 4073, -433, 4072, -439, 4072, -445,
        4071, -451, 4070, -458, 4070, -464, 4069, -470, 4068, -476, 4067, -483,
        4067, -489, 4066, -495, 4065, -501, 4064, -508, 4064, -514, 4063, -520,
        4062, -526, 4061, -533, 4060, -539, 4060, -545, 4059, -551, 4058, -557,
        4057, -564, 4056, -570, 4055, -576, 4054, -582, 4053, -589, 4053, -595,
        4052, -601, 4051, -607, 4050, -613, 4049, -620, 4048, -626, 4047, -632,
        4046, -638, 4045, -644, 4044, -651, 4043, -657, 4042, -663, 4041, -669,
        4040, -675, 4039, -682, 4038, -688, 4037, -694, 4036, -700, 4035, -706,
        4034, -713, 4032, -719, 4031, -725, 4030, -731, 4029, -737, 4028, -744,
        4027, -750, 4026, -756, 4024, -762, 4023, -768, 4022, -774, 4021, -781,
        4020, -787, 4019, -793, 4017, -799, 4016, -805, 4015, -811, 4014, -818,
        4012, -824, 4011, -830, 4010, -836, 4008, -842, 4007, -848, 4006, -854,
        4005, -861, 4003, -867, 4002, -873, 4001, -879, 3999, -885, 3998, -891,
        3996, -897, 3995, -904, 3994, -910, 3992, -916, 3991, -922, 3989, -928,
        3988, -934, 3987, -940, 3985, -946, 3984, -953, 3982, -959, 3981, -965,
        3979, -971, 3978, -977, 3976, -983, 3975, -989, 3973, -995, 3972, -1001,
        3970, -1007, 3969, -1014, 3967, -1020, 3965, -1026, 3964, -1032, 3962,
        -1038, 3961, -1044, 3959, -1050, 3958, -1056, 3956, -1062, 3954, -1068,
        3953, -1074, 3951, -1080, 3949, -1086, 3948, -1092, 3946, -1099, 3944,
        -1105, 3943, -1111, 3941, -1117, 3939, -1123, 3937, -1129, 3936, -1135,
        3934, -1141, 3932, -1147, 3930, -1153, 3929, -1159, 3927, -1165, 3925,
        -1171, 3923, -1177, 3921, -1183, 3920, -1189, 3918, -1195, 3916, -1201,
        3914, -1207, 3912, -1213, 3910, -1219, 3909, -1225, 3907, -1231, 3905,
        -1237, 3903, -1243, 3901, -1249, 3899, -1255, 3897, -1261, 3895, -1267,
        3893, -1273, 3891, -1279, 3889, -1285, 3887, -1291, 3885, -1297, 3883,
        -1303, 3881, -1309, 3879, -1315, 3877, -1321, 3875, -1327, 3873, -1332,
        3871, -1338, 3869, -1344, 3867, -1350, 3865, -1356, 3863, -1362, 3861,
        -1368, 3859, -1374, 3857, -1380, 3854, -1386, 3852, -1392, 3850, -1398,
        3848, -1404, 3846, -1409, 3844, -1415, 3842, -1421, 3839, -1427, 3837,
        -1433, 3835, -1439, 3833, -1445, 3831, -1451, 3828, -1457, 3826, -1462,
        3824, -1468, 3822, -1474, 3819, -1480, 3817, -1486, 3815, -1492, 3812,
        -1498, 3810, -1503, 3808, -1509, 3805, -1515, 3803, -1521, 3801, -1527,
        3798, -1533, 3796, -1538, 3794, -1544, 3791, -1550, 3789, -1556, 3787,
        -1562, 3784, -1567, 3782, -1573, 3779, -1579, 3777, -1585, 3775, -1591,
        3772, -1596, 3770, -1602, 3767, -1608, 3765, -1614, 3762, -1620, 3760,
        -1625, 3757, -1631, 3755, -1637, 3752, -1643, 3750, -1648, 3747, -1654,
        3745, -1660, 3742, -1666, 3739, -1671, 3737, -1677, 3734, -1683, 3732,
        -1689, 3729, -1694, 3727, -1700, 3724, -1706, 3721, -1711, 3719, -1717,
        3716, -1723, 3713, -1729, 3711, -1734, 3708, -1740, 3705, -1746, 3703,
        -1751, 3700, -1757, 3697, -1763, 3695, -1768, 3692, -1774, 3689, -1780,
        3686, -1785, 3684, -1791, 3681, -1797, 3678, -1802, 3675, -1808, 3673,
        -1813, 3670, -1819, 3667, -1825, 3664, -1830, 3661, -1836, 3659, -1842,
        3656, -1847, 3653, -1853, 3650, -1858, 3647, -1864, 3644, -1870, 3642,
        -1875, 3639, -1881, 3636, -1886, 3633, -1892, 3630, -1898, 3627, -1903,
        3624, -1909, 3621, -1914, 3618, -1920, 3615, -1925, 3612, -1931, 3609,
        -1936, 3606, -1942, 3603, -1947, 3600, -1953, 3597, -1958, 3594, -1964,
        3591, -1970, 3588, -1975, 3585, -1981, 3582, -1986, 3579, -1992, 3576,
        -1997, 3573, -2002, 3570, -2008, 3567, -2013, 3564, -2019, 3561, -2024,
        3558, -2030, 3555, -2035, 3551, -2041, 3548, -2046, 3545, -2052, 3542,
        -2057, 3539, -2062, 3536, -2068, 3532, -2073, 3529, -2079, 3526, -2084,
        3523, -2090, 3520, -2095, 3516, -2100, 3513, -2106, 3510, -2111, 3507,
        -2117, 3504, -2122, 3500, -2127, 3497, -2133, 3494, -2138, 3490, -2143,
        3487, -2149, 3484, -2154, 3481, -2159, 3477, -2165, 3474, -2170, 3471,
        -2175, 3467, -2181, 3464, -2186, 3461, -2191, 3457, -2197, 3454, -2202,
        3450, -2207, 3447, -2213, 3444, -2218, 3440, -2223, 3437, -2228, 3433,
        -2234, 3430, -2239, 3426, -2244, 3423, -2249, 3420, -2255, 3416, -2260,
        3413, -2265, 3409, -2270, 3406, -2276, 3402, -2281, 3399, -2286, 3395,
        -2291, 3392, -2296, 3388, -2302, 3385, -2307, 3381, -2312, 3378, -2317,
        3374, -2322, 3370, -2328, 3367, -2333, 3363, -2338, 3360, -2343, 3356,
        -2348, 3352, -2353, 3349, -2359, 3345, -2364, 3342, -2369, 3338, -2374,
        3334, -2379, 3331, -2384, 3327, -2389, 3323, -2394, 3320, -2399, 3316,
        -2405, 3312, -2410, 3309, -2415, 3305, -2420, 3301, -2425, 3297, -2430,
        3294, -2435, 3290, -2440, 3286, -2445, 3282, -2450, 3279, -2455, 3275,
        -2460, 3271, -2465, 3267, -2470, 3264, -2475, 3260, -2480, 3256, -2485,
        3252, -2490, 3248, -2495, 3244, -2500, 3241, -2505, 3237, -2510, 3233,
        -2515, 3229, -2520, 3225, -2525, 3221, -2530, 3217, -2535, 3214, -2540,
        3210, -2545, 3206, -2550, 3202, -2555, 3198, -2559, 3194, -2564, 3190,
        -2569, 3186, -2574, 3182, -2579, 3178, -2584, 3174, -2589, 3170, -2594,
        3166, -2598, 3162, -2603, 3158, -2608, 3154, -2613, 3150, -2618, 3146,
        -2623, 3142, -2628, 3138, -2632, 3134, -2637, 3130, -2642, 3126, -2647,
        3122, -2652, 3118, -2656, 3114, -2661, 3110, -2666, 3106, -2671, 3102,
        -2675, 3097, -2680, 3093, -2685, 3089, -2690, 3085, -2694, 3081, -2699,
        3077, -2704, 3073, -2709, 3068, -2713, 3064, -2718, 3060, -2723, 3056,
        -2727, 3052, -2732, 3048, -2737, 3043, -2741, 3039, -2746, 3035, -2751,
        3031, -2755, 3026, -2760, 3022, -2765, 3018, -2769, 3014, -2774, 3009,
        -2779, 3005, -2783, 3001, -2788, 2997, -2792, 2992, -2797, 2988, -2802,
        2984, -2806, 2979, -2811, 2975, -2815, 2971, -2820, 2967, -2824, 2962,
        -2829, 2958, -2833, 2953, -2838, 2949, -2843, 2945, -2847, 2940, -2852,
        2936, -2856, 2932, -2861, 2927, -2865, 2923, -2870, 2918, -2874, 2914,
        -2878, 2910, -2883, 2905, -2887, 2901, -2892, 2896, -2896, 2892, -2901,
        2887, -2905, 2883, -2910, 2878, -2914, 2874, -2918, 2870, -2923, 2865,
        -2927, 2861, -2932, 2856, -2936, 2852, -2940, 2847, -2945, 2843, -2949,
        2838, -2953, 2833, -2958, 2829, -2962, 2824, -2967, 2820, -2971, 2815,
        -2975, 2811, -2979, 2806, -2984, 2802, -2988, 2797, -2992, 2792, -2997,
        2788, -3001, 2783, -3005, 2779, -3009, 2774, -3014, 2769, -3018, 2765,
        -3022, 2760, -3026, 2755, -3031, 2751, -3035, 2746, -3039, 2741, -3043,
        2737, -3048, 2732, -3052, 2727, -3056, 2723, -3060, 2718, -3064, 2713,
        -3068, 2709, -3073, 2704, -3077, 2699, -3081, 2694, -3085, 2690, -3089,
        2685, -3093, 2680, -3097, 2675, -3102, 2671, -3106, 2666, -3110, 2661,
        -3114, 2656, -3118, 2652, -3122, 2647, -3126, 2642, -3130, 2637, -3134,
        2632, -3138, 2628, -3142, 2623, -3146, 2618, -3150, 2613, -3154, 2608,
        -3158, 2603, -3162, 2598, -3166, 2594, -3170, 2589, -3174, 2584, -3178,
        2579, -3182, 2574, -3186, 2569, -3190, 2564, -3194, 2559, -3198, 2555,
        -3202, 2550, -3206, 2545, -3210, 2540, -3214, 2535, -3217, 2530, -3221,
        2525, -3225, 2520, -3229, 2515, -3233, 2510, -3237, 2505, -3241, 2500,
        -3244, 2495, -3248, 2490, -3252, 2485, -3256, 2480, -3260, 2475, -3264,
        2470, -3267, 2465, -3271, 2460, -3275, 2455, -3279, 2450, -3282, 2445,
        -3286, 2440, -3290, 2435, -3294, 2430, -3297, 2425, -3301, 2420, -3305,
        2415, -3309, 2410, -3312, 2405, -3316, 2399, -3320, 2394, -3323, 2389,
        -3327, 2384, -3331, 2379, -3334, 2374, -3338, 2369, -3342, 2364, -3345,
        2359, -3349, 2353, -3352, 2348, -3356, 2343, -3360, 2338, -3363, 2333,
        -3367, 2328, -3370, 2322, -3374, 2317, -3378, 2312, -3381, 2307, -3385,
        2302, -3388, 2296, -3392, 2291, -3395, 2286, -3399, 2281, -3402, 2276,
        -3406, 2270, -3409, 2265, -3413, 2260, -3416, 2255, -3420, 2249, -3423,
        2244, -3426, 2239, -3430, 2234, -3433, 2228, -3437, 2223, -3440, 2218,
        -3444, 2213, -3447, 2207, -3450, 2202, -3454, 2197, -3457, 2191, -3461,
        2186, -3464, 2181, -3467, 2175, -3471, 2170, -3474, 2165, -3477, 2159,
        -3481, 2154, -3484, 2149, -3487, 2143, -3490, 2138, -3494, 2133, -3497,
        2127, -3500, 2122, -3504, 2117, -3507, 2111, -3510, 2106, -3513, 2100,
        -3516, 2095, -3520, 2090, -3523, 2084, -3526, 2079, -3529, 2073, -3532,
        2068, -3536, 2062, -3539, 2057, -3542, 2052, -3545, 2046, -3548, 2041,
        -3551, 2035, -3555, 2030, -3558, 2024, -3561, 2019, -3564, 2013, -3567,
        2008, -3570, 2002, -3573, 1997, -3576, 1992, -3579, 1986, -3582, 1981,
        -3585, 1975, -3588, 1970, -3591, 1964, -3594, 1958, -3597, 1953, -3600,
        1947, -3603, 1942, -3606, 1936, -3609, 1931, -3612, 1925, -3615, 1920,
        -3618, 1914, -3621, 1909, -3624, 1903, -3627, 1898, -3630, 1892, -3633,
        1886, -3636, 1881, -3639, 1875, -3642, 1870, -3644, 1864, -3647, 1858,
        -3650, 1853, -3653, 1847, -3656, 1842, -3659, 1836, -3661, 1830, -3664,
        1825, -3667, 1819, -3670, 1813, -3673, 1808, -3675, 1802, -3678, 1797,
        -3681, 1791, -3684, 1785, -3686, 1780, -3689, 1774, -3692, 1768, -3695,
        1763, -3697, 1757, -3700, 1751, -3703, 1746, -3705, 1740, -3708, 1734,
        -3711, 1729, -3713, 1723, -3716, 1717, -3719, 1711, -3721, 1706, -3724,
        1700, -3727, 1694, -3729, 1689, -3732, 1683, -3734, 1677, -3737, 1671,
        -3739, 1666, -3742, 1660, -3745, 1654, -3747, 1648, -3750, 1643, -3752,
        1637, -3755, 1631, -3757, 1625, -3760, 1620, -3762, 1614, -3765, 1608,
        -3767, 1602, -3770, 1596, -3772, 1591, -3775, 1585, -3777, 1579, -3779,
        1573, -3782, 1567, -3784, 1562, -3787, 1556, -3789, 1550, -3791, 1544,
        -3794, 1538, -3796, 1533, -3798, 1527, -3801, 1521, -3803, 1515, -3805,
        1509, -3808, 1503, -3810, 1498, -3812, 1492, -3815, 1486, -3817, 1480,
        -3819, 1474, -3822, 1468, -3824, 1462, -3826, 1457, -3828, 1451, -3831,
        1445, -3833, 1439, -3835, 1433, -3837, 1427, -3839, 1421, -3842, 1415,
        -3844, 1409, -3846, 1404, -3848, 1398, -3850, 1392, -3852, 1386, -3854,
        1380, -3857, 1374, -3859, 1368, -3861, 1362, -3863, 1356, -3865, 1350,
        -3867, 1344, -3869, 1338, -3871, 1332, -3873, 1327, -3875, 1321, -3877,
        1315, -3879, 1309, -3881, 1303, -3883, 1297, -3885, 1291, -3887, 1285,
        -3889, 1279, -3891, 1273, -3893, 1267, -3895, 1261, -3897, 1255, -3899,
        1249, -3901, 1243, -3903, 1237, -3905, 1231, -3907, 1225, -3909, 1219,
        -3910, 1213, -3912, 1207, -3914, 1201, -3916, 1195, -3918, 1189, -3920,
        1183, -3921, 1177, -3923, 1171, -3925, 1165, -3927, 1159, -3929, 1153,
        -3930, 1147, -3932, 1141, -3934, 1135, -3936, 1129, -3937, 1123, -3939,
        1117, -3941, 1111, -3943, 1105, -3944, 1099, -3946, 1092, -3948, 1086,
        -3949, 1080, -3951, 1074, -3953, 1068, -3954, 1062, -3956, 1056, -3958,
        1050, -3959, 1044, -3961, 1038, -3962, 1032, -3964, 1026, -3965, 1020,
        -3967, 1014, -3969, 1007, -3970, 1001, -3972, 995, -3973, 989, -3975,
        983, -3976, 977, -3978, 971, -3979, 965, -3981, 959, -3982, 953, -3984,
        946, -3985, 940, -3987, 934, -3988, 928, -3989, 922, -3991, 916, -3992,
        910, -3994, 904, -3995, 897, -3996, 891, -3998, 885, -3999, 879, -4001,
        873, -4002, 867, -4003, 861, -4005, 854, -4006, 848, -4007, 842, -4008,
        836, -4010, 830, -4011, 824, -4012, 818, -4014, 811, -4015, 805, -4016,
        799, -4017, 793, -4019, 787, -4020, 781, -4021, 774, -4022, 768, -4023,
        762, -4024, 756, -4026, 750, -4027, 744, -4028, 737, -4029, 731, -4030,
        725, -4031, 719, -4032, 713, -4034, 706, -4035, 700, -4036, 694, -4037,
        688, -4038, 682, -4039, 675, -4040, 669, -4041, 663, -4042, 657, -4043,
        651, -4044, 644, -4045, 638, -4046, 632, -4047, 626, -4048, 620, -4049,
        613, -4050, 607, -4051, 601, -4052, 595, -4053, 589, -4053, 582, -4054,
        576, -4055, 570, -4056, 564, -4057, 557, -4058, 551, -4059, 545, -4060,
        539, -4060, 533, -4061, 526, -4062, 520, -4063, 514, -4064, 508, -4064,
        501, -4065, 495, -4066, 489, -4067, 483, -4067, 476, -4068, 470, -4069,
        464, -4070, 458, -4070, 451, -4071, 445, -4072, 439, -4072, 433, -4073,
        426, -4074, 420, -4074, 414, -4075, 408, -4076, 401, -4076, 395, -4077,
        389, -4077, 383, -4078, 376, -4079, 370, -4079, 364, -4080, 358, -4080,
        351, -4081, 345, -4081, 339, -4082, 333, -4082, 326, -4083, 320, -4083,
        314, -4084, 308, -4084, 301, -4085, 295, -4085, 289, -4086, 283, -4086,
        276, -4087, 270, -4087, 264, -4088, 257, -4088, 251, -4088, 245, -4089,
        239, -4089, 232, -4089, 226, -4090, 220, -4090, 214, -4090, 207, -4091,
        201, -4091, 195, -4091, 188, -4092, 182, -4092, 176, -4092, 170, -4092,
        163, -4093, 157, -4093, 151, -4093, 144, -4093, 138, -4094, 132, -4094,
        126, -4094, 119, -4094, 113, -4094, 107, -4095, 101, -4095, 94, -4095,
        88, -4095, 82, -4095, 75, -4095, 69, -4095, 63, -4096, 57, -4096, 50,
        -4096, 44, -4096, 38, -4096, 31, -4096, 25, -4096, 19, -4096, 13,
        -4096, 6, -4096, 0, -4096, -6, -4096, -13, -4096, -19, -4096, -25, -4096,
        -31, -4096, -38, -4096, -44, -4096, -50, -4096, -57, -4096, -63, -4096,
        -69, -4095, -75, -4095, -82, -4095, -88, -4095, -94, -4095, -101, -4095,
        -107, -4095, -113, -4094, -119, -4094, -126, -4094, -132, -4094, -138,
        -4094, -144, -4093, -151, -4093, -157, -4093, -163, -4093, -170, -4092,
        -176, -4092, -182, -4092, -188, -4092, -195, -4091, -201, -4091, -207,
        -4091, -214, -4090, -220, -4090, -226, -4090, -232, -4089, -239, -4089,
        -245, -4089, -251, -4088, -257, -4088, -264, -4088, -270, -4087, -276,
        -4087, -283, -4086, -289, -4086, -295, -4085, -301, -4085, -308, -4084,
        -314, -4084, -320, -4083, -326, -4083, -333, -4082, -339, -4082, -345,
        -4081, -351, -4081, -358, -4080, -364, -4080, -370, -4079, -376, -4079,
        -383, -4078, -389, -4077, -395, -4077, -401, -4076, -408, -4076, -414,
        -4075, -420, -4074, -426, -4074, -433, -4073, -439, -4072, -445, -4072,
        -451, -4071, -458, -4070, -464, -4070, -470, -4069, -476, -4068, -483,
        -4067, -489, -4067, -495, -4066, -501, -4065, -508, -4064, -514, -4064,
        -520, -4063, -526, -4062, -533, -4061, -539, -4060, -545, -4060, -551,
        -4059, -557, -4058, -564, -4057, -570, -4056, -576, -4055, -582, -4054,
        -589, -4053, -595, -4053, -601, -4052, -607, -4051, -613, -4050, -620,
        -4049, -626, -4048, -632, -4047, -638, -4046, -644, -4045, -651, -4044,
        -657, -4043, -663, -4042, -669, -4041, -675, -4040, -682, -4039, -688,
        -4038, -694, -4037, -700, -4036, -706, -4035, -713, -4034, -719, -4032,
        -725, -4031, -731, -4030, -737, -4029, -744, -4028, -750, -4027, -756,
        -4026, -762, -4024, -768, -4023, -774, -4022, -781, -4021, -787, -4020,
        -793, -4019, -799, -4017, -805, -4016, -811, -4015, -818, -4014, -824,
        -4012, -830, -4011, -836, -4010, -842, -4008, -848, -4007, -854, -4006,
        -861, -4005, -867, -4003, -873, -4002, -879, -4001, -885, -3999, -891,
        -3998, -897, -3996, -904, -3995, -910, -3994, -916, -3992, -922, -3991,
        -928, -3989, -934, -3988, -940, -3987, -946, -3985, -953, -3984, -959,
        -3982, -965, -3981, -971, -3979, -977, -3978, -983, -3976, -989, -3975,
        -995, -3973, -1001, -3972, -1007, -3970, -1014, -3969, -1020, -3967,
        -1026, -3965, -1032, -3964, -1038, -3962, -1044, -3961, -1050, -3959,
        -1056, -3958, -1062, -3956, -1068, -3954, -1074, -3953, -1080, -3951,
        -1086, -3949, -1092, -3948, -1099, -3946, -1105, -3944, -1111, -3943,
        -1117, -3941, -1123, -3939, -1129, -3937, -1135, -3936, -1141, -3934,
        -1147, -3932, -1153, -3930, -1159, -3929, -1165, -3927, -1171, -3925,
        -1177, -3923, -1183, -3921, -1189, -3920, -1195, -3918, -1201, -3916,
        -1207, -3914, -1213, -3912, -1219, -3910, -1225, -3909, -1231, -3907,
        -1237, -3905, -1243, -3903, -1249, -3901, -1255, -3899, -1261, -3897,
        -1267, -3895, -1273, -3893, -1279, -3891, -1285, -3889, -1291, -3887,
        -1297, -3885, -1303, -3883, -1309, -3881, -1315, -3879, -1321, -3877,
        -1327, -3875, -1332, -3873, -1338, -3871, -1344, -3869, -1350, -3867,
        -1356, -3865, -1362, -3863, -1368, -3861, -1374, -3859, -1380, -3857,
        -1386, -3854, -1392, -3852, -1398, -3850, -1404, -3848, -1409, -3846,
        -1415, -3844, -1421, -3842, -1427, -3839, -1433, -3837, -1439, -3835,
        -1445, -3833, -1451, -3831, -1457, -3828, -1462, -3826, -1468, -3824,
        -1474, -3822, -1480, -3819, -1486, -3817, -1492, -3815, -1498, -3812,
        -1503, -3810, -1509, -3808, -1515, -3805, -1521, -3803, -1527, -3801,
        -1533, -3798, -1538, -3796, -1544, -3794, -1550, -3791, -1556, -3789,
        -1562, -3787, -1567, -3784, -1573, -3782, -1579, -3779, -1585, -3777,
        -1591, -3775, -1596, -3772, -1602, -3770, -1608, -3767, -1614, -3765,
        -1620, -3762, -1625, -3760, -1631, -3757, -1637, -3755, -1643, -3752,
        -1648, -3750, -1654, -3747, -1660, -3745, -1666, -3742, -1671, -3739,
        -1677, -3737, -1683, -3734, -1689, -3732, -1694, -3729, -1700, -3727,
        -1706, -3724, -1711, -3721, -1717, -3719, -1723, -3716, -1729, -3713,
        -1734, -3711, -1740, -3708, -1746, -3705, -1751, -3703, -1757, -3700,
        -1763, -3697, -1768, -3695, -1774, -3692, -1780, -3689, -1785, -3686,
        -1791, -3684, -1797, -3681, -1802, -3678, -1808, -3675, -1813, -3673,
        -1819, -3670, -1825, -3667, -1830, -3664, -1836, -3661, -1842, -3659,
        -1847, -3656, -1853, -3653, -1858, -3650, -1864, -3647, -1870, -3644,
        -1875, -3642, -1881, -3639, -1886, -3636, -1892, -3633, -1898, -3630,
        -1903, -3627, -1909, -3624, -1914, -3621, -1920, -3618, -1925, -3615,
        -1931, -3612, -1936, -3609, -1942, -3606, -1947, -3603, -1953, -3600,
        -1958, -3597, -1964, -3594, -1970, -3591, -1975, -3588, -1981, -3585,
        -1986, -3582, -1992, -3579, -1997, -3576, -2002, -3573, -2008, -3570,
        -2013, -3567, -2019, -3564, -2024, -3561, -2030, -3558, -2035, -3555,
        -2041, -3551, -2046, -3548, -2052, -3545, -2057, -3542, -2062, -3539,
        -2068, -3536, -2073, -3532, -2079, -3529, -2084, -3526, -2090, -3523,
        -2095, -3520, -2100, -3516, -2106, -3513, -2111, -3510, -2117, -3507,
        -2122, -3504, -2127, -3500, -2133, -3497, -2138, -3494, -2143, -3490,
        -2149, -3487, -2154, -3484, -2159, -3481, -2165, -3477, -2170, -3474,
        -2175, -3471, -2181, -3467, -2186, -3464, -2191, -3461, -2197, -3457,
        -2202, -3454, -2207, -3450, -2213, -3447, -2218, -3444, -2223, -3440,
        -2228, -3437, -2234, -3433, -2239, -3430, -2244, -3426, -2249, -3423,
        -2255, -3420, -2260, -3416, -2265, -3413, -2270, -3409, -2276, -3406,
        -2281, -3402, -2286, -3399, -2291, -3395, -2296, -3392, -2302, -3388,
        -2307, -3385, -2312, -3381, -2317, -3378, -2322, -3374, -2328, -3370,
        -2333, -3367, -2338, -3363, -2343, -3360, -2348, -3356, -2353, -3352,
        -2359, -3349, -2364, -3345, -2369, -3342, -2374, -3338, -2379, -3334,
        -2384, -3331, -2389, -3327, -2394, -3323, -2399, -3320, -2405, -3316,
        -2410, -3312, -2415, -3309, -2420, -3305, -2425, -3301, -2430, -3297,
        -2435, -3294, -2440, -3290, -2445, -3286, -2450, -3282, -2455, -3279,
        -2460, -3275, -2465, -3271, -2470, -3267, -2475, -3264, -2480, -3260,
        -2485, -3256, -2490, -3252, -2495, -3248, -2500, -3244, -2505, -3241,
        -2510, -3237, -2515, -3233, -2520, -3229, -2525, -3225, -2530, -3221,
        -2535, -3217, -2540, -3214, -2545, -3210, -2550, -3206, -2555, -3202,
        -2559, -3198, -2564, -3194, -2569, -3190, -2574, -3186, -2579, -3182,
        -2584, -3178, -2589, -3174, -2594, -3170, -2598, -3166, -2603, -3162,
        -2608, -3158, -2613, -3154, -2618, -3150, -2623, -3146, -2628, -3142,
        -2632, -3138, -2637, -3134, -2642, -3130, -2647, -3126, -2652, -3122,
        -2656, -3118, -2661, -3114, -2666, -3110, -2671, -3106, -2675, -3102,
        -2680, -3097, -2685, -3093, -2690, -3089, -2694, -3085, -2699, -3081,
        -2704, -3077, -2709, -3073, -2713, -3068, -2718, -3064, -2723, -3060,
        -2727, -3056, -2732, -3052, -2737, -3048, -2741, -3043, -2746, -3039,
        -2751, -3035, -2755, -3031, -2760, -3026, -2765, -3022, -2769, -3018,
        -2774, -3014, -2779, -3009, -2783, -3005, -2788, -3001, -2792, -2997,
        -2797, -2992, -2802, -2988, -2806, -2984, -2811, -2979, -2815, -2975,
        -2820, -2971, -2824, -2967, -2829, -2962, -2833, -2958, -2838, -2953,
        -2843, -2949, -2847, -2945, -2852, -2940, -2856, -2936, -2861, -2932,
        -2865, -2927, -2870, -2923, -2874, -2918, -2878, -2914, -2883, -2910,
        -2887, -2905, -2892, -2901, -2896, -2896, -2901, -2892, -2905, -2887,
        -2910, -2883, -2914, -2878, -2918, -2874, -2923, -2870, -2927, -2865,
        -2932, -2861, -2936, -2856, -2940, -2852, -2945, -2847, -2949, -2843,
        -2953, -2838, -2958, -2833, -2962, -2829, -2967, -2824, -2971, -2820,
        -2975, -2815, -2979, -2811, -2984, -2806, -2988, -2802, -2992, -2797,
        -2997, -2792, -3001, -2788, -3005, -2783, -3009, -2779, -3014, -2774,
        -3018, -2769, -3022, -2765, -3026, -2760, -3031, -2755, -3035, -2751,
        -3039, -2746, -3043, -2741, -3048, -2737, -3052, -2732, -3056, -2727,
        -3060, -2723, -3064, -2718, -3068, -2713, -3073, -2709, -3077, -2704,
        -3081, -2699, -3085, -2694, -3089, -2690, -3093, -2685, -3097, -2680,
        -3102, -2675, -3106, -2671, -3110, -2666, -3114, -2661, -3118, -2656,
        -3122, -2652, -3126, -2647, -3130, -2642, -3134, -2637, -3138, -2632,
        -3142, -2628, -3146, -2623, -3150, -2618, -3154, -2613, -3158, -2608,
        -3162, -2603, -3166, -2598, -3170, -2594, -3174, -2589, -3178, -2584,
        -3182, -2579, -3186, -2574, -3190, -2569, -3194, -2564, -3198, -2559,
        -3202, -2555, -3206, -2550, -3210, -2545, -3214, -2540, -3217, -2535,
        -3221, -2530, -3225, -2525, -3229, -2520, -3233, -2515, -3237, -2510,
        -3241, -2505, -3244, -2500, -3248, -2495, -3252, -2490, -3256, -2485,
        -3260, -2480, -3264, -2475, -3267, -2470, -3271, -2465, -3275, -2460,
        -3279, -2455, -3282, -2450, -3286, -2445, -3290, -2440, -3294, -2435,
        -3297, -2430, -3301, -2425, -3305, -2420, -3309, -2415, -3312, -2410,
        -3316, -2405, -3320, -2399, -3323, -2394, -3327, -2389, -3331, -2384,
        -3334, -2379, -3338, -2374, -3342, -2369, -3345, -2364, -3349, -2359,
        -3352, -2353, -3356, -2348, -3360, -2343, -3363, -2338, -3367, -2333,
        -3370, -2328, -3374, -2322, -3378, -2317, -3381, -2312, -3385, -2307,
        -3388, -2302, -3392, -2296, -3395, -2291, -3399, -2286, -3402, -2281,
        -3406, -2276, -3409, -2270, -3413, -2265, -3416, -2260, -3420, -2255,
        -3423, -2249, -3426, -2244, -3430, -2239, -3433, -2234, -3437, -2228,
        -3440, -2223, -3444, -2218, -3447, -2213, -3450, -2207, -3454, -2202,
        -3457, -2197, -3461, -2191, -3464, -2186, -3467, -2181, -3471, -2175,
        -3474, -2170, -3477, -2165, -3481, -2159, -3484, -2154, -3487, -2149,
        -3490, -2143, -3494, -2138, -3497, -2133, -3500, -2127, -3504, -2122,
        -3507, -2117, -3510, -2111, -3513, -2106, -3516, -2100, -3520, -2095,
        -3523, -2090, -3526, -2084, -3529, -2079, -3532, -2073, -3536, -2068,
        -3539, -2062, -3542, -2057, -3545, -2052, -3548, -2046, -3551, -2041,
        -3555, -2035, -3558, -2030, -3561, -2024, -3564, -2019, -3567, -2013,
        -3570, -2008, -3573, -2002, -3576, -1997, -3579, -1992, -3582, -1986,
        -3585, -1981, -3588, -1975, -3591, -1970, -3594, -1964, -3597, -1958,
        -3600, -1953, -3603, -1947, -3606, -1942, -3609, -1936, -3612, -1931,
        -3615, -1925, -3618, -1920, -3621, -1914, -3624, -1909, -3627, -1903,
        -3630, -1898, -3633, -1892, -3636, -1886, -3639, -1881, -3642, -1875,
        -3644, -1870, -3647, -1864, -3650, -1858, -3653, -1853, -3656, -1847,
        -3659, -1842, -3661, -1836, -3664, -1830, -3667, -1825, -3670, -1819,
        -3673, -1813, -3675, -1808, -3678, -1802, -3681, -1797, -3684, -1791,
        -3686, -1785, -3689, -1780, -3692, -1774, -3695, -1768, -3697, -1763,
        -3700, -1757, -3703, -1751, -3705, -1746, -3708, -1740, -3711, -1734,
        -3713, -1729, -3716, -1723, -3719, -1717, -3721, -1711, -3724, -1706,
        -3727, -1700, -3729, -1694, -3732, -1689, -3734, -1683, -3737, -1677,
        -3739, -1671, -3742, -1666, -3745, -1660, -3747, -1654, -3750, -1648,
        -3752, -1643, -3755, -1637, -3757, -1631, -3760, -1625, -3762, -1620,
        -3765, -1614, -3767, -1608, -3770, -1602, -3772, -1596, -3775, -1591,
        -3777, -1585, -3779, -1579, -3782, -1573, -3784, -1567, -3787, -1562,
        -3789, -1556, -3791, -1550, -3794, -1544, -3796, -1538, -3798, -1533,
        -3801, -1527, -3803, -1521, -3805, -1515, -3808, -1509, -3810, -1503,
        -3812, -1498, -3815, -1492, -3817, -1486, -3819, -1480, -3822, -1474,
        -3824, -1468, -3826, -1462, -3828, -1457, -3831, -1451, -3833, -1445,
        -3835, -1439, -3837, -1433, -3839, -1427, -3842, -1421, -3844, -1415,
        -3846, -1409, -3848, -1404, -3850, -1398, -3852, -1392, -3854, -1386,
        -3857, -1380, -3859, -1374, -3861, -1368, -3863, -1362, -3865, -1356,
        -3867, -1350, -3869, -1344, -3871, -1338, -3873, -1332, -3875, -1327,
        -3877, -1321, -3879, -1315, -3881, -1309, -3883, -1303, -3885, -1297,
        -3887, -1291, -3889, -1285, -3891, -1279, -3893, -1273, -3895, -1267,
        -3897, -1261, -3899, -1255, -3901, -1249, -3903, -1243, -3905, -1237,
        -3907, -1231, -3909, -1225, -3910, -1219, -3912, -1213, -3914, -1207,
        -3916, -1201, -3918, -1195, -3920, -1189, -3921, -1183, -3923, -1177,
        -3925, -1171, -3927, -1165, -3929, -1159, -3930, -1153, -3932, -1147,
        -3934, -1141, -3936, -1135, -3937, -1129, -3939, -1123, -3941, -1117,
        -3943, -1111, -3944, -1105, -3946, -1099, -3948, -1092, -3949, -1086,
        -3951, -1080, -3953, -1074, -3954, -1068, -3956, -1062, -3958, -1056,
        -3959, -1050, -3961, -1044, -3962, -1038, -3964, -1032, -3965, -1026,
        -3967, -1020, -3969, -1014, -3970, -1007, -3972, -1001, -3973, -995,
        -3975, -989, -3976, -983, -3978, -977, -3979, -971, -3981, -965, -3982,
        -959, -3984, -953, -3985, -946, -3987, -940, -3988, -934, -3989, -928,
        -3991, -922, -3992, -916, -3994, -910, -3995, -904, -3996, -897, -3998,
        -891, -3999, -885, -4001, -879, -4002, -873, -4003, -867, -4005, -861,
        -4006, -854, -4007, -848, -4008, -842, -4010, -836, -4011, -830, -4012,
        -824, -4014, -818, -4015, -811, -4016, -805, -4017, -799, -4019, -793,
        -4020, -787, -4021, -781, -4022, -774, -4023, -768, -4024, -762, -4026,
        -756, -4027, -750, -4028, -744, -4029, -737, -4030, -731, -4031, -725,
        -4032, -719, -4034, -713, -4035, -706, -4036, -700, -4037, -694, -4038,
        -688, -4039, -682, -4040, -675, -4041, -669, -4042, -663, -4043, -657,
        -4044, -651, -4045, -644, -4046, -638, -4047, -632, -4048, -626, -4049,
        -620, -4050, -613, -4051, -607, -4052, -601, -4053, -595, -4053, -589,
        -4054, -582, -4055, -576, -4056, -570, -4057, -564, -4058, -557, -4059,
        -551, -4060, -545, -4060, -539, -4061, -533, -4062, -526, -4063, -520,
        -4064, -514, -4064, -508, -4065, -501, -4066, -495, -4067, -489, -4067,
        -483, -4068, -476, -4069, -470, -4070, -464, -4070, -458, -4071, -451,
        -4072, -445, -4072, -439, -4073, -433, -4074, -426, -4074, -420, -4075,
        -414, -4076, -408, -4076, -401, -4077, -395, -4077, -389, -4078, -383,
        -4079, -376, -4079, -370, -4080, -364, -4080, -358, -4081, -351, -4081,
        -345, -4082, -339, -4082, -333, -4083, -326, -4083, -320, -4084, -314,
        -4084, -308, -4085, -301, -4085, -295, -4086, -289, -4086, -283, -4087,
        -276, -4087, -270, -4088, -264, -4088, -257, -4088, -251, -4089, -245,
        -4089, -239, -4089, -232, -4090, -226, -4090, -220, -4090, -214, -4091,
        -207, -4091, -201, -4091, -195, -4092, -188, -4092, -182, -4092, -176,
        -4092, -170, -4093, -163, -4093, -157, -4093, -151, -4093, -144, -4094,
        -138, -4094, -132, -4094, -126, -4094, -119, -4094, -113, -4095, -107,
        -4095, -101, -4095, -94, -4095, -88, -4095, -82, -4095, -75, -4095, -69,
        -4096, -63, -4096, -57, -4096, -50, -4096, -44, -4096, -38, -4096, -31,
        -4096, -25, -4096, -19, -4096, -13, -4096, -6, -4096, 0, -4096, 6, -4096,
        13, -4096, 19, -4096, 25, -4096, 31, -4096, 38, -4096, 44, -4096, 50,
        -4096, 57, -4096, 63, -4095, 69, -4095, 75, -4095, 82, -4095, 88, -4095,
        94, -4095, 101, -4095, 107, -4094, 113, -4094, 119, -4094, 126, -4094,
        132, -4094, 138, -4093, 144, -4093, 151, -4093, 157, -4093, 163, -4092,
        170, -4092, 176, -4092, 182, -4092, 188, -4091, 195, -4091, 201, -4091,
        207, -4090, 214, -4090, 220, -4090, 226, -4089, 232, -4089, 239, -4089,
        245, -4088, 251, -4088, 257, -4088, 264, -4087, 270, -4087, 276, -4086,
        283, -4086, 289, -4085, 295, -4085, 301, -4084, 308, -4084, 314, -4083,
        320, -4083, 326, -4082, 333, -4082, 339, -4081, 345, -4081, 351, -4080,
        358, -4080, 364, -4079, 370, -4079, 376, -4078, 383, -4077, 389, -4077,
        395, -4076, 401, -4076, 408, -4075, 414, -4074, 420, -4074, 426, -4073,
        433, -4072, 439, -4072, 445, -4071, 451, -4070, 458, -4070, 464, -4069,
        470, -4068, 476, -4067, 483, -4067, 489, -4066, 495, -4065, 501, -4064,
        508, -4064, 514, -4063, 520, -4062, 526, -4061, 533, -4060, 539, -4060,
        545, -4059, 551, -4058, 557, -4057, 564, -4056, 570, -4055, 576, -4054,
        582, -4053, 589, -4053, 595, -4052, 601, -4051, 607, -4050, 613, -4049,
        620, -4048, 626, -4047, 632, -4046, 638, -4045, 644, -4044, 651, -4043,
        657, -4042, 663, -4041, 669, -4040, 675, -4039, 682, -4038, 688, -4037,
        694, -4036, 700, -4035, 706, -4034, 713, -4032, 719, -4031, 725, -4030,
        731, -4029, 737, -4028, 744, -4027, 750, -4026, 756, -4024, 762, -4023,
        768, -4022, 774, -4021, 781, -4020, 787, -4019, 793, -4017, 799, -4016,
        805, -4015, 811, -4014, 818, -4012, 824, -4011, 830, -4010, 836, -4008,
        842, -4007, 848, -4006, 854, -4005, 861, -4003, 867, -4002, 873, -4001,
        879, -3999, 885, -3998, 891, -3996, 897, -3995, 904, -3994, 910, -3992,
        916, -3991, 922, -3989, 928, -3988, 934, -3987, 940, -3985, 946, -3984,
        953, -3982, 959, -3981, 965, -3979, 971, -3978, 977, -3976, 983, -3975,
        989, -3973, 995, -3972, 1001, -3970, 1007, -3969, 1014, -3967, 1020,
        -3965, 1026, -3964, 1032, -3962, 1038, -3961, 1044, -3959, 1050, -3958,
        1056, -3956, 1062, -3954, 1068, -3953, 1074, -3951, 1080, -3949, 1086,
        -3948, 1092, -3946, 1099, -3944, 1105, -3943, 1111, -3941, 1117, -3939,
        1123, -3937, 1129, -3936, 1135, -3934, 1141, -3932, 1147, -3930, 1153,
        -3929, 1159, -3927, 1165, -3925, 1171, -3923, 1177, -3921, 1183, -3920,
        1189, -3918, 1195, -3916, 1201, -3914, 1207, -3912, 1213, -3910, 1219,
        -3909, 1225, -3907, 1231, -3905, 1237, -3903, 1243, -3901, 1249, -3899,
        1255, -3897, 1261, -3895, 1267, -3893, 1273, -3891, 1279, -3889, 1285,
        -3887, 1291, -3885, 1297, -3883, 1303, -3881, 1309, -3879, 1315, -3877,
        1321, -3875, 1327, -3873, 1332, -3871, 1338, -3869, 1344, -3867, 1350,
        -3865, 1356, -3863, 1362, -3861, 1368, -3859, 1374, -3857, 1380, -3854,
        1386, -3852, 1392, -3850, 1398, -3848, 1404, -3846, 1409, -3844, 1415,
        -3842, 1421, -3839, 1427, -3837, 1433, -3835, 1439, -3833, 1445, -3831,
        1451, -3828, 1457, -3826, 1462, -3824, 1468, -3822, 1474, -3819, 1480,
        -3817, 1486, -3815, 1492, -3812, 1498, -3810, 1503, -3808, 1509, -3805,
        1515, -3803, 1521, -3801, 1527, -3798, 1533, -3796, 1538, -3794, 1544,
        -3791, 1550, -3789, 1556, -3787, 1562, -3784, 1567, -3782, 1573, -3779,
        1579, -3777, 1585, -3775, 1591, -3772, 1596, -3770, 1602, -3767, 1608,
        -3765, 1614, -3762, 1620, -3760, 1625, -3757, 1631, -3755, 1637, -3752,
        1643, -3750, 1648, -3747, 1654, -3745, 1660, -3742, 1666, -3739, 1671,
        -3737, 1677, -3734, 1683, -3732, 1689, -3729, 1694, -3727, 1700, -3724,
        1706, -3721, 1711, -3719, 1717, -3716, 1723, -3713, 1729, -3711, 1734,
        -3708, 1740, -3705, 1746, -3703, 1751, -3700, 1757, -3697, 1763, -3695,
        1768, -3692, 1774, -3689, 1780, -3686, 1785, -3684, 1791, -3681, 1797,
        -3678, 1802, -3675, 1808, -3673, 1813, -3670, 1819, -3667, 1825, -3664,
        1830, -3661, 1836, -3659, 1842, -3656, 1847, -3653, 1853, -3650, 1858,
        -3647, 1864, -3644, 1870, -3642, 1875, -3639, 1881, -3636, 1886, -3633,
        1892, -3630, 1898, -3627, 1903, -3624, 1909, -3621, 1914, -3618, 1920,
        -3615, 1925, -3612, 1931, -3609, 1936, -3606, 1942, -3603, 1947, -3600,
        1953, -3597, 1958, -3594, 1964, -3591, 1970, -3588, 1975, -3585, 1981,
        -3582, 1986, -3579, 1992, -3576, 1997, -3573, 2002, -3570, 2008, -3567,
        2013, -3564, 2019, -3561, 2024, -3558, 2030, -3555, 2035, -3551, 2041,
        -3548, 2046, -3545, 2052, -3542, 2057, -3539, 2062, -3536, 2068, -3532,
        2073, -3529, 2079, -3526, 2084, -3523, 2090, -3520, 2095, -3516, 2100,
        -3513, 2106, -3510, 2111, -3507, 2117, -3504, 2122, -3500, 2127, -3497,
        2133, -3494, 2138, -3490, 2143, -3487, 2149, -3484, 2154, -3481, 2159,
        -3477, 2165, -3474, 2170, -3471, 2175, -3467, 2181, -3464, 2186, -3461,
        2191, -3457, 2197, -3454, 2202, -3450, 2207, -3447, 2213, -3444, 2218,
        -3440, 2223, -3437, 2228, -3433, 2234, -3430, 2239, -3426, 2244, -3423,
        2249, -3420, 2255, -3416, 2260, -3413, 2265, -3409, 2270, -3406, 2276,
        -3402, 2281, -3399, 2286, -3395, 2291, -3392, 2296, -3388, 2302, -3385,
        2307, -3381, 2312, -3378, 2317, -3374, 2322, -3370, 2328, -3367, 2333,
        -3363, 2338, -3360, 2343, -3356, 2348, -3352, 2353, -3349, 2359, -3345,
        2364, -3342, 2369, -3338, 2374, -3334, 2379, -3331, 2384, -3327, 2389,
        -3323, 2394, -3320, 2399, -3316, 2405, -3312, 2410, -3309, 2415, -3305,
        2420, -3301, 2425, -3297, 2430, -3294, 2435, -3290, 2440, -3286, 2445,
        -3282, 2450, -3279, 2455, -3275, 2460, -3271, 2465, -3267, 2470, -3264,
        2475, -3260, 2480, -3256, 2485, -3252, 2490, -3248, 2495, -3244, 2500,
        -3241, 2505, -3237, 2510, -3233, 2515, -3229, 2520, -3225, 2525, -3221,
        2530, -3217, 2535, -3214, 2540, -3210, 2545, -3206, 2550, -3202, 2555,
        -3198, 2559, -3194, 2564, -3190, 2569, -3186, 2574, -3182, 2579, -3178,
        2584, -3174, 2589, -3170, 2594, -3166, 2598, -3162, 2603, -3158, 2608,
        -3154, 2613, -3150, 2618, -3146, 2623, -3142, 2628, -3138, 2632, -3134,
        2637, -3130, 2642, -3126, 2647, -3122, 2652, -3118, 2656, -3114, 2661,
        -3110, 2666, -3106, 2671, -3102, 2675, -3097, 2680, -3093, 2685, -3089,
        2690, -3085, 2694, -3081, 2699, -3077, 2704, -3073, 2709, -3068, 2713,
        -3064, 2718, -3060, 2723, -3056, 2727, -3052, 2732, -3048, 2737, -3043,
        2741, -3039, 2746, -3035, 2751, -3031, 2755, -3026, 2760, -3022, 2765,
        -3018, 2769, -3014, 2774, -3009, 2779, -3005, 2783, -3001, 2788, -2997,
        2792, -2992, 2797, -2988, 2802, -2984, 2806, -2979, 2811, -2975, 2815,
        -2971, 2820, -2967, 2824, -2962, 2829, -2958, 2833, -2953, 2838, -2949,
        2843, -2945, 2847, -2940, 2852, -2936, 2856, -2932, 2861, -2927, 2865,
        -2923, 2870, -2918, 2874, -2914, 2878, -2910, 2883, -2905, 2887, -2901,
        2892, -2896, 2896, -2892, 2901, -2887, 2905, -2883, 2910, -2878, 2914,
        -2874, 2918, -2870, 2923, -2865, 2927, -2861, 2932, -2856, 2936, -2852,
        2940, -2847, 2945, -2843, 2949, -2838, 2953, -2833, 2958, -2829, 2962,
        -2824, 2967, -2820, 2971, -2815, 2975, -2811, 2979, -2806, 2984, -2802,
        2988, -2797, 2992, -2792, 2997, -2788, 3001, -2783, 3005, -2779, 3009,
        -2774, 3014, -2769, 3018, -2765, 3022, -2760, 3026, -2755, 3031, -2751,
        3035, -2746, 3039, -2741, 3043, -2737, 3048, -2732, 3052, -2727, 3056,
        -2723, 3060, -2718, 3064, -2713, 3068, -2709, 3073, -2704, 3077, -2699,
        3081, -2694, 3085, -2690, 3089, -2685, 3093, -2680, 3097, -2675, 3102,
        -2671, 3106, -2666, 3110, -2661, 3114, -2656, 3118, -2652, 3122, -2647,
        3126, -2642, 3130, -2637, 3134, -2632, 3138, -2628, 3142, -2623, 3146,
        -2618, 3150, -2613, 3154, -2608, 3158, -2603, 3162, -2598, 3166, -2594,
        3170, -2589, 3174, -2584, 3178, -2579, 3182, -2574, 3186, -2569, 3190,
        -2564, 3194, -2559, 3198, -2555, 3202, -2550, 3206, -2545, 3210, -2540,
        3214, -2535, 3217, -2530, 3221, -2525, 3225, -2520, 3229, -2515, 3233,
        -2510, 3237, -2505, 3241, -2500, 3244, -2495, 3248, -2490, 3252, -2485,
        3256, -2480, 3260, -2475, 3264, -2470, 3267, -2465, 3271, -2460, 3275,
        -2455, 3279, -2450, 3282, -2445, 3286, -2440, 3290, -2435, 3294, -2430,
        3297, -2425, 3301, -2420, 3305, -2415, 3309, -2410, 3312, -2405, 3316,
        -2399, 3320, -2394, 3323, -2389, 3327, -2384, 3331, -2379, 3334, -2374,
        3338, -2369, 3342, -2364, 3345, -2359, 3349, -2353, 3352, -2348, 3356,
        -2343, 3360, -2338, 3363, -2333, 3367, -2328, 3370, -2322, 3374, -2317,
        3378, -2312, 3381, -2307, 3385, -2302, 3388, -2296, 3392, -2291, 3395,
        -2286, 3399, -2281, 3402, -2276, 3406, -2270, 3409, -2265, 3413, -2260,
        3416, -2255, 3420, -2249, 3423, -2244, 3426, -2239, 3430, -2234, 3433,
        -2228, 3437, -2223, 3440, -2218, 3444, -2213, 3447, -2207, 3450, -2202,
        3454, -2197, 3457, -2191, 3461, -2186, 3464, -2181, 3467, -2175, 3471,
        -2170, 3474, -2165, 3477, -2159, 3481, -2154, 3484, -2149, 3487, -2143,
        3490, -2138, 3494, -2133, 3497, -2127, 3500, -2122, 3504, -2117, 3507,
        -2111, 3510, -2106, 3513, -2100, 3516, -2095, 3520, -2090, 3523, -2084,
        3526, -2079, 3529, -2073, 3532, -2068, 3536, -2062, 3539, -2057, 3542,
        -2052, 3545, -2046, 3548, -2041, 3551, -2035, 3555, -2030, 3558, -2024,
        3561, -2019, 3564, -2013, 3567, -2008, 3570, -2002, 3573, -1997, 3576,
        -1992, 3579, -1986, 3582, -1981, 3585, -1975, 3588, -1970, 3591, -1964,
        3594, -1958, 3597, -1953, 3600, -1947, 3603, -1942, 3606, -1936, 3609,
        -1931, 3612, -1925, 3615, -1920, 3618, -1914, 3621, -1909, 3624, -1903,
        3627, -1898, 3630, -1892, 3633, -1886, 3636, -1881, 3639, -1875, 3642,
        -1870, 3644, -1864, 3647, -1858, 3650, -1853, 3653, -1847, 3656, -1842,
        3659, -1836, 3661, -1830, 3664, -1825, 3667, -1819, 3670, -1813, 3673,
        -1808, 3675, -1802, 3678, -1797, 3681, -1791, 3684, -1785, 3686, -1780,
        3689, -1774, 3692, -1768, 3695, -1763, 3697, -1757, 3700, -1751, 3703,
        -1746, 3705, -1740, 3708, -1734, 3711, -1729, 3713, -1723, 3716, -1717,
        3719, -1711, 3721, -1706, 3724, -1700, 3727, -1694, 3729, -1689, 3732,
        -1683, 3734, -1677, 3737, -1671, 3739, -1666, 3742, -1660, 3745, -1654,
        3747, -1648, 3750, -1643, 3752, -1637, 3755, -1631, 3757, -1625, 3760,
        -1620, 3762, -1614, 3765, -1608, 3767, -1602, 3770, -1596, 3772, -1591,
        3775, -1585, 3777, -1579, 3779, -1573, 3782, -1567, 3784, -1562, 3787,
        -1556, 3789, -1550, 3791, -1544, 3794, -1538, 3796, -1533, 3798, -1527,
        3801, -1521, 3803, -1515, 3805, -1509, 3808, -1503, 3810, -1498, 3812,
        -1492, 3815, -1486, 3817, -1480, 3819, -1474, 3822, -1468, 3824, -1462,
        3826, -1457, 3828, -1451, 3831, -1445, 3833, -1439, 3835, -1433, 3837,
        -1427, 3839, -1421, 3842, -1415, 3844, -1409, 3846, -1404, 3848, -1398,
        3850, -1392, 3852, -1386, 3854, -1380, 3857, -1374, 3859, -1368, 3861,
        -1362, 3863, -1356, 3865, -1350, 3867, -1344, 3869, -1338, 3871, -1332,
        3873, -1327, 3875, -1321, 3877, -1315, 3879, -1309, 3881, -1303, 3883,
        -1297, 3885, -1291, 3887, -1285, 3889, -1279, 3891, -1273, 3893, -1267,
        3895, -1261, 3897, -1255, 3899, -1249, 3901, -1243, 3903, -1237, 3905,
        -1231, 3907, -1225, 3909, -1219, 3910, -1213, 3912, -1207, 3914, -1201,
        3916, -1195, 3918, -1189, 3920, -1183, 3921, -1177, 3923, -1171, 3925,
        -1165, 3927, -1159, 3929, -1153, 3930, -1147, 3932, -1141, 3934, -1135,
        3936, -1129, 3937, -1123, 3939, -1117, 3941, -1111, 3943, -1105, 3944,
        -1099, 3946, -1092, 3948, -1086, 3949, -1080, 3951, -1074, 3953, -1068,
        3954, -1062, 3956, -1056, 3958, -1050, 3959, -1044, 3961, -1038, 3962,
        -1032, 3964, -1026, 3965, -1020, 3967, -1014, 3969, -1007, 3970, -1001,
        3972, -995, 3973, -989, 3975, -983, 3976, -977, 3978, -971, 3979, -965,
        3981, -959, 3982, -953, 3984, -946, 3985, -940, 3987, -934, 3988, -928,
        3989, -922, 3991, -916, 3992, -910, 3994, -904, 3995, -897, 3996, -891,
        3998, -885, 3999, -879, 4001, -873, 4002, -867, 4003, -861, 4005, -854,
        4006, -848, 4007, -842, 4008, -836, 4010, -830, 4011, -824, 4012, -818,
        4014, -811, 4015, -805, 4016, -799, 4017, -793, 4019, -787, 4020, -781,
        4021, -774, 4022, -768, 4023, -762, 4024, -756, 4026, -750, 4027, -744,
        4028, -737, 4029, -731, 4030, -725, 4031, -719, 4032, -713, 4034, -706,
        4035, -700, 4036, -694, 4037, -688, 4038, -682, 4039, -675, 4040, -669,
        4041, -663, 4042, -657, 4043, -651, 4044, -644, 4045, -638, 4046, -632,
        4047, -626, 4048, -620, 4049, -613, 4050, -607, 4051, -601, 4052, -595,
        4053, -589, 4053, -582, 4054, -576, 4055, -570, 4056, -564, 4057, -557,
        4058, -551, 4059, -545, 4060, -539, 4060, -533, 4061, -526, 4062, -520,
        4063, -514, 4064, -508, 4064, -501, 4065, -495, 4066, -489, 4067, -483,
        4067, -476, 4068, -470, 4069, -464, 4070, -458, 4070, -451, 4071, -445,
        4072, -439, 4072, -433, 4073, -426, 4074, -420, 4074, -414, 4075, -408,
        4076, -401, 4076, -395, 4077, -389, 4077, -383, 4078, -376, 4079, -370,
        4079, -364, 4080, -358, 4080, -351, 4081, -345, 4081, -339, 4082, -333,
        4082, -326, 4083, -320, 4083, -314, 4084, -308, 4084, -301, 4085, -295,
        4085, -289, 4086, -283, 4086, -276, 4087, -270, 4087, -264, 4088, -257,
        4088, -251, 4088, -245, 4089, -239, 4089, -232, 4089, -226, 4090, -220,
        4090, -214, 4090, -207, 4091, -201, 4091, -195, 4091, -188, 4092, -182,
        4092, -176, 4092, -170, 4092, -163, 4093, -157, 4093, -151, 4093, -144,
        4093, -138, 4094, -132, 4094, -126, 4094, -119, 4094, -113, 4094, -107,
        4095, -101, 4095, -94, 4095, -88, 4095, -82, 4095, -75, 4095, -69, 4095,
        -63, 4096, -57, 4096, -50, 4096, -44, 4096, -38, 4096, -31, 4096, -25,
        4096, -19, 4096, -13, 4096, -6, 4096
    };

    public static short[] DAT_69C90 =
    {
        0, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10, 10, 11, 12, 12, 13, 14,
        14, 15, 16, 16, 17, 17, 18, 19, 19, 20, 21, 21, 22, 23, 23, 24, 24, 25,
        26, 26, 27, 28, 28, 29, 30, 30, 31, 31, 32, 33, 33, 34, 35, 35, 36, 36,
        37, 38, 38, 39, 40, 40, 41, 42, 42, 43, 43, 44, 45, 45, 46, 47, 47, 48,
        49, 49, 50, 50, 51, 52, 52, 53, 54, 54, 55, 55, 56, 57, 57, 58, 59, 59,
        60, 61, 61, 62, 62, 63, 64, 64, 65, 66, 66, 67, 67, 68, 69, 69, 70, 71,
        71, 72, 73, 73, 74, 74, 75, 76, 76, 77, 78, 78, 79, 79, 80, 81, 81, 82,
        83, 83, 84, 84, 85, 86, 86, 87, 88, 88, 89, 89, 90, 91, 91, 92, 93, 93,
        94, 94, 95, 96, 96, 97, 98, 98, 99, 99, 100, 101, 101, 102, 103, 103, 104,
        104, 105, 106, 106, 107, 107, 108, 109, 109, 110, 111, 111, 112, 112, 113,
        114, 114, 115, 116, 116, 117, 117, 118, 119, 119, 120, 120, 121, 122, 122,
        123, 124, 124, 125, 125, 126, 127, 127, 128, 128, 129, 130, 130, 131, 131,
        132, 133, 133, 134, 135, 135, 136, 136, 137, 138, 138, 139, 139, 140, 141,
        141, 142, 142, 143, 144, 144, 145, 145, 146, 147, 147, 148, 148, 149, 150,
        150, 151, 152, 152, 153, 153, 154, 155, 155, 156, 156, 157, 158, 158, 159,
        159, 160, 161, 161, 162, 162, 163, 164, 164, 165, 165, 166, 166, 167, 168,
        168, 169, 169, 170, 171, 171, 172, 172, 173, 174, 174, 175, 175, 176, 177,
        177, 178, 178, 179, 180, 180, 181, 181, 182, 182, 183, 184, 184, 185, 185,
        186, 187, 187, 188, 188, 189, 190, 190, 191, 191, 192, 192, 193, 194, 194,
        195, 195, 196, 197, 197, 198, 198, 199, 199, 200, 201, 201, 202, 202, 203,
        203, 204, 205, 205, 206, 206, 207, 207, 208, 209, 209, 210, 210, 211, 211,
        212, 213, 213, 214, 214, 215, 215, 216, 217, 217, 218, 218, 219, 219, 220,
        221, 221, 222, 222, 223, 223, 224, 225, 225, 226, 226, 227, 227, 228, 228,
        229, 230, 230, 231, 231, 232, 232, 233, 234, 234, 235, 235, 236, 236, 237,
        237, 238, 239, 239, 240, 240, 241, 241, 242, 242, 243, 244, 244, 245, 245,
        246, 246, 247, 247, 248, 248, 249, 250, 250, 251, 251, 252, 252, 253, 253,
        254, 254, 255, 256, 256, 257, 257, 258, 258, 259, 259, 260, 260, 261, 262,
        262, 263, 263, 264, 264, 265, 265, 266, 266, 267, 267, 268, 269, 269, 270,
        270, 271, 271, 272, 272, 273, 273, 274, 274, 275, 275, 276, 276, 277, 278,
        278, 279, 279, 280, 280, 281, 281, 282, 282, 283, 283, 284, 284, 285, 285,
        286, 286, 287, 288, 288, 289, 289, 290, 290, 291, 291, 292, 292, 293, 293,
        294, 294, 295, 295, 296, 296, 297, 297, 298, 298, 299, 299, 300, 300, 301,
        301, 302, 302, 303, 303, 304, 304, 305, 305, 306, 307, 307, 308, 308, 309,
        309, 310, 310, 311, 311, 312, 312, 313, 313, 314, 314, 315, 315, 316, 316,
        317, 317, 318, 318, 319, 319, 320, 320, 321, 321, 322, 322, 322, 323, 323,
        324, 324, 325, 325, 326, 326, 327, 327, 328, 328, 329, 329, 330, 330, 331,
        331, 332, 332, 333, 333, 334, 334, 335, 335, 336, 336, 337, 337, 338, 338,
        339, 339, 340, 340, 340, 341, 341, 342, 342, 343, 343, 344, 344, 345, 345,
        346, 346, 347, 347, 348, 348, 349, 349, 349, 350, 350, 351, 351, 352, 352,
        353, 353, 354, 354, 355, 355, 356, 356, 356, 357, 357, 358, 358, 359, 359,
        360, 360, 361, 361, 362, 362, 362, 363, 363, 364, 364, 365, 365, 366, 366,
        367, 367, 368, 368, 368, 369, 369, 370, 370, 371, 371, 372, 372, 372, 373,
        373, 374, 374, 375, 375, 376, 376, 377, 377, 377, 378, 378, 379, 379, 380,
        380, 381, 381, 381, 382, 382, 383, 383, 384, 384, 385, 385, 385, 386, 386,
        387, 387, 388, 388, 388, 389, 389, 390, 390, 391, 391, 391, 392, 392, 393,
        393, 394, 394, 395, 395, 395, 396, 396, 397, 397, 398, 398, 398, 399, 399,
        400, 400, 401, 401, 401, 402, 402, 403, 403, 403, 404, 404, 405, 405, 406,
        406, 406, 407, 407, 408, 408, 409, 409, 409, 410, 410, 411, 411, 411, 412,
        412, 413, 413, 413, 414, 414, 415, 415, 416, 416, 416, 417, 417, 418, 418,
        418, 419, 419, 420, 420, 420, 421, 421, 422, 422, 422, 423, 423, 424, 424,
        425, 425, 425, 426, 426, 427, 427, 427, 428, 428, 429, 429, 429, 430, 430,
        431, 431, 431, 432, 432, 432, 433, 433, 434, 434, 434, 435, 435, 436, 436,
        436, 437, 437, 438, 438, 438, 439, 439, 440, 440, 440, 441, 441, 441, 442,
        442, 443, 443, 443, 444, 444, 445, 445, 445, 446, 446, 446, 447, 447, 448,
        448, 448, 449, 449, 450, 450, 450, 451, 451, 451, 452, 452, 453, 453, 453,
        454, 454, 454, 455, 455, 456, 456, 456, 457, 457, 457, 458, 458, 459, 459,
        459, 460, 460, 460, 461, 461, 461, 462, 462, 463, 463, 463, 464, 464, 464,
        465, 465, 465, 466, 466, 467, 467, 467, 468, 468, 468, 469, 469, 469, 470,
        470, 471, 471, 471, 472, 472, 472, 473, 473, 473, 474, 474, 474, 475, 475,
        476, 476, 476, 477, 477, 477, 478, 478, 478, 479, 479, 479, 480, 480, 480,
        481, 481, 481, 482, 482, 483, 483, 483, 484, 484, 484, 485, 485, 485, 486,
        486, 486, 487, 487, 487, 488, 488, 488, 489, 489, 489, 490, 490, 490, 491,
        491, 491, 492, 492, 492, 493, 493, 493, 494, 494, 494, 495, 495, 495, 496,
        496, 496, 497, 497, 497, 498, 498, 498, 499, 499, 499, 500, 500, 500, 501,
        501, 501, 502, 502, 502, 503, 503, 503, 504, 504, 504, 505, 505, 505, 506,
        506, 506, 507, 507, 507, 508, 508, 508, 509, 509, 509, 510, 510, 510, 511,
        511, 511, 511, 512, 512
    };

    public static byte[] DAT_6B204 = { 0, 1, 2, 3 };

    public static uint[,] DAT_637DC = 
        { { 0, 0, 0xA8563412, 0x123800, 0xA8563412, 0xA8563412 }, 
        { 0, 0, 0xA8563412, 0x123800, 0xA8563412, 0xA8563412 } };
    public static uint[,] DAT_637E0 = 
        { { 0, 0, 0xB9C81007, 0x1000, 0xB9C81007, 0xB9C81D07 }, 
        { 0, 0, 0xB9C81007, 0x1000, 0xB9C81007, 0xB9C81D07 } };

    public static byte[] DAT_639A0 = { 0, 4, 1, 4, 2, 4, 3, 4, 0, 1, 0, 2, 1, 3, 2, 3 };

    public static uint DAT_63A64 = 0;
    public static uint DAT_63A68 = 0;

    public static ushort[] DAT_63F68 = { };

    // 18 Characters Data
    public static VehicleData[] vehicleConfigs =
    {
        new VehicleData
        {

        },
        new VehicleData
        {
            unk0x0 = new short[6] { 4, 8, 48, 56, 92, 92 },
            unk0xC=12,
            vehicleID=_VEHICLE.Thunderbolt,
            unk0xE=18,
            unk0xF=-2,
            unk0x10=19,
            unk0x11=32,
            unk0x12=57,
            unk0x13=148,
            unk0x15=50,
            vectorUnk=new Vector3Int(64, 64, 64),
            unk0x2A=0x2999,
            unk0x2C=new byte[4] { 200, 172, 91, 52 }
        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
        new VehicleData
        {

        },
    };

    public static Color32[] DAT_1f800000 = new Color32[32];
    public static int DAT_1f800080;
    public static Vector3Int DAT_1f800084;
    public static short DAT_1f800094;
    public static short DAT_1f800096;
    public static short DAT_1f800098;
    public static short DAT_1f80009a;
    public static TerrainScreen[] terrainScreen = new TerrainScreen[20];
    /*public static int DAT_1f80009c;
    public static int DAT_1f8000a0;
    public static uint DAT_1f8000a4;
    public static Color32 DAT_1f8000a8;
    public static int DAT_1f8000c0;
    public static uint DAT_1f8000c4;
    public static Color32 DAT_1f8000c8;
    public static int DAT_1f8000dc;
    public static int DAT_1f8000e0;
    public static uint DAT_1f8000e4;
    public static Color32 DAT_1f8000e8;
    public static int DAT_1f800140;
    public static uint DAT_1f800144;
    public static Color32 DAT_1f800148;
    public static int DAT_1f800160;
    public static uint DAT_1f800164;
    public static Color32 DAT_1f800168;
    public static int DAT_1f800180;
    public static uint DAT_1f800184;
    public static Color32 DAT_1f800188;
    public static int DAT_1f8001dc;
    public static int DAT_1f8001e0;
    public static uint DAT_1f8001e4;
    public static Color32 DAT_1f8001e8;
    public static int DAT_1f800200;
    public static uint DAT_1f800204;
    public static Color32 DAT_1f800208;
    public static int DAT_1f80021c;
    public static int DAT_1f800220;
    public static uint DAT_1f800224;
    public static Color32 DAT_1f800228;*/

    public VigTerrain terrain;
    public VehicleConfig commonWheelConfiguration;
    public Vehicle[] players; //gp+FF8h

    public Queue<ScreenPoly> DAT_610; //gp+610h
    public Matrix3x3 DAT_718; //gp+718h
    public Matrix3x3 DAT_738; //gp+738h
    public bool DAT_83B; //gp+83Bh
    public Vector3Int DAT_A18; //gp+A18h
    public Vector3Int DAT_A24; //gp+A24h
    public Color32 DAT_E04; //gp+E04h
    public short DAT_E1C; //gp+E1Ch
    public VigTransform DAT_EA8; //gp+EA8h
    public int DAT_ED8; //gp+ED8h
    public int DAT_EDC; //gp+EDCh
    public VigTransform DAT_EE0; //gp+EE0h
    public VigTransform DAT_F00; //gp+F00h
    public int DAT_F20; //gp+F20h
    public VigTransform DAT_F28; //gp+F28h
    public Matrix3x3 DAT_F48; //gp+F48h
    public Matrix3x3 DAT_F68; //gp+F68h
    public VigTransform DAT_F88; //gp+F88h
    public Matrix3x3 DAT_FA8; //gp+FA8h
    public int DAT_C74; //gp+C74h
    public Color32[] DAT_CE0; //gp+CE0h
    public ushort[] DAT_CF0; //gp+CF0h
    public byte[] DAT_CF4; //gp+CF4h
    public byte[] DAT_CF5; //gp+CF5h
    public byte DAT_CF8; //gp+CF8h
    public byte[] DAT_CFC; //gp+CFCh
    public byte DAT_D08; //gp+D08h
    public byte[] DAT_D18; //gp+D18h
    public byte[] DAT_D19; //gp+D19h
    public byte[] DAT_D1A; //gp+D1Ah
    public byte[] DAT_D1B; //gp+D1Bh
    public int DAT_DA0; //gp+DA0h
    public Color32 DAT_DA4; //gp+DA4h
    public int DAT_DB0; //gp+DB0h
    public short DAT_DB4; //gp+DB4h
    public short DAT_DB6; //gp+DB6h
    public short DAT_DB8; //gp+DB8h
    public Color32 DAT_DDC; //gp+DDCh
    public ushort unk7; //gp+EA0h
    public byte uvSize;
    public ushort unk3;
    public ushort[,] DAT_08; //gp+08h
    public _SCREEN_MODE screenMode; //gp+2Ch;
    public _GAME_MODE gameMode; //gp+31h
    public bool DAT_36; //gp+36h
    public int gravityFactor; //gp+3Ch
    public int DAT_40; //gp+40h

    public void FUN_1C134()
    {
        FUN_1C158();
    }

    public void FUN_2DE18()
    {
        Utilities.SetColorMatrix(DAT_FA8);
        Utilities.SetBackColor(64, 64, 64);
        Utilities.SetFogNearFar(2048, 8192, 0);
    }

    // Start is called before the first frame update
    void Awake()
    {
        if (instance == null)
        {
            instance = this;
        }

        DAT_D18 = new byte[2];
        DAT_D19 = new byte[2];
        DAT_D1A = new byte[2];
        DAT_D1B = new byte[2];
        DAT_CF0 = new ushort[2];
        DAT_CFC = new byte[4];
    }

    // Update is called once per frame
    void Update()
    {
        
    }

    //FUN_132CC
    private void FixedUpdate()
    {
        short sVar1;
        VigObject oVar7;
        VigCamera cVar7;
        Vehicle vVar12;
        uint uVar18;

        if (screenMode == _SCREEN_MODE.Whole)
        {
            if (gameMode < _GAME_MODE.Versus || players[0].vObject.maxHalfHealth != 0)
            {
                vVar12 = players[0];

                if (players[1] != null)
                {
                    uVar18 = players[1].vObject.flags;
                    oVar7 = players[1].vObject;

                    if ((uVar18 & 0x2000000) == 0)
                        oVar7.flags = uVar18 & 0xfffffffd;
                }
                else
                {
                    uVar18 = players[0].vObject.flags;
                    oVar7 = players[0].vObject;
                    vVar12 = players[1];

                    if ((uVar18 & 0x2000000) == 0)
                        oVar7.flags = uVar18 & 0xfffffffd;
                }

                if (vVar12.view == _CAR_VIEW.Close)
                {
                    if ((vVar12.vObject.flags & 0x2000000) != 0)
                    {
                        cVar7 = vVar12.vCamera;
                        sVar1 = cVar7.fieldOfView;
                        oVar7 = cVar7.vObject;
                    }
                    else
                    {
                        oVar7 = vVar12.closeViewer;
                        vVar12.vObject.flags |= 2;
                        sVar1 = vVar12.vCamera.fieldOfView;
                    }
                }
                else
                {
                    if ((vVar12.vObject.flags & 0x2000000) == 0)
                        vVar12.vObject.flags &= 0xfffffffd;

                    cVar7 = vVar12.vCamera;
                    sVar1 = cVar7.fieldOfView;
                    oVar7 = cVar7.vObject;
                }

                FUN_2D278(oVar7, sVar1);
                terrain.DAT_BDFF0 = DAT_F00;
            }
        }
    }

    private void FUN_1C158()
    {
        bool bVar1;
        bool bVar3;
        uint uVar4;
        int iVar5;
        int iVar6;
        int piVar7;
        int iVar8;
        int iVar9;
        int piVar11;
        int iVar13;
        int iVar14;
        int piVar17;
        int iVar18;
        int iVar19;
        int iVar21;
        int iVar22;
        uint uVar23;
        int iVar24;
        int iVar25;
        int iVar26;
        int iVar27;
        int unaff_s6;
        Vector3Int local_c0;
        List<Vector2Int> local_b0;
        Vector3Int local_30;
        int local_28;
        List<Vector3Int> aiStack240;

        if (gameMode < _GAME_MODE.Coop)
        {
            DAT_DB4 = 80;
            DAT_DB6 = 40;
            DAT_DB8 = 20;
        }
        else
        {
            DAT_DB4 = 48;
            DAT_DB6 = 24;
            DAT_DB8 = 12;
        }

        Utilities.SetRotMatrix(DAT_F28.rotation);
        local_c0 = DAT_F28.position;

        if (DAT_F28.position.x < 0)
            local_c0.x = DAT_F28.position.x + 255;

        local_c0.x = local_c0.x >> 8;
        local_c0.y = DAT_F28.position.y;

        if (DAT_F28.position.y < 0)
            local_c0.y = DAT_F28.position.y + 255;

        local_c0.y = local_c0.y >> 8;
        local_c0.z = DAT_F28.position.z;

        if (DAT_F28.position.z < 0)
            local_c0.z = DAT_F28.position.z + 255;

        local_c0.z = local_c0.z >> 8;
        DAT_1f800084 = new Vector3Int(-local_c0.x, -local_c0.y, -local_c0.z);
        Coprocessor.translationVector._trx = local_c0.x;
        Coprocessor.translationVector._try = local_c0.y;
        Coprocessor.translationVector._trz = local_c0.z;
        iVar26 = (DAT_DB4 * (DAT_EDC / 2) * 256) / DAT_ED8;
        uVar23 = 0;
        iVar24 = 0;
        iVar27 = (DAT_DB4 * (DAT_F20 / 2) * 256) / DAT_ED8;
        uVar4 = 0;
        local_30 = new Vector3Int();
        aiStack240 = new List<Vector3Int>();

        do
        {
            local_30.x = iVar26;

            if (uVar4 == 0)
                local_30.x = -local_30.x;

            local_30.y = iVar27;

            if ((uVar23 & 2) == 0)
                local_30.y = -local_30.y;

            uVar23++;
            local_30.z = DAT_DB4 << 8;
            aiStack240.Add(Utilities.FUN_23F58(local_30));
            uVar4 = uVar23 & 1;
        } while ((int)uVar23 < 4);

        iVar24 = 0;
        iVar26 = 0;
        local_b0 = new List<Vector2Int>();

        do
        {
            if ((uint)aiStack240[iVar26].y + 8U < 0x3001)
            {
                local_b0.Add(new Vector2Int(aiStack240[iVar26].x, aiStack240[iVar26].z));
                iVar24++;
            }

            iVar26++;
        } while (iVar26 < 5);

        iVar26 = 0;

        do
        {
            uVar4 = DAT_639A0[iVar26];
            uVar23 = DAT_639A0[iVar26 + 1];
            piVar17 = (int)uVar4;
            piVar7 = (int)uVar23;

            if (aiStack240[piVar7].y < -8)
            {
                if (-9 < aiStack240[piVar17].y)
                {
                    iVar27 = aiStack240[piVar17].x;
                    local_b0.Add(new Vector2Int(
                        iVar27 + (aiStack240[piVar7].x - iVar27) * (-8 - aiStack240[piVar17].y) /
                                 (aiStack240[piVar7].y - aiStack240[piVar17].y),
                        aiStack240[piVar17].z +
                        ((aiStack240[piVar7].z - aiStack240[piVar17].z) *
                        (-8 - aiStack240[piVar17].y)) /
                        (aiStack240[piVar7].y - aiStack240[piVar17].y)));
                    iVar24++;
                }
            }
            else
            {
                if (-9 >= aiStack240[piVar17].y)
                {
                    iVar27 = aiStack240[piVar17].x;
                    local_b0.Add(new Vector2Int(
                        iVar27 + (aiStack240[piVar7].x - iVar27) * (-8 - aiStack240[piVar17].y) /
                                 (aiStack240[piVar7].y - aiStack240[piVar17].y),
                        aiStack240[piVar17].z +
                        ((aiStack240[piVar7].z - aiStack240[piVar17].z) *
                        (-8 - aiStack240[piVar17].y)) /
                        (aiStack240[piVar7].y - aiStack240[piVar17].y)));
                    iVar24++;
                }
            }

            if (aiStack240[piVar7].y < 0x2ff9)
            {
                if (aiStack240[piVar17].y >= 0x2ff9)
                {
                    iVar27 = aiStack240[piVar17].x;
                    local_b0.Add(new Vector2Int(
                          iVar27 + (aiStack240[piVar7].x - iVar27) * (0x2ff8 - aiStack240[piVar17].y) /
                                    (aiStack240[piVar7].y - aiStack240[piVar17].y),
                          aiStack240[piVar17].z +
                          ((aiStack240[piVar7].z - aiStack240[piVar17].z) *
                          (0x2ff8 - aiStack240[piVar17].y)) /
                          (aiStack240[piVar7].y - aiStack240[piVar17].y)));
                    iVar24++;
                }
            }
            else
            {
                if (aiStack240[piVar17].y < 0x2ff9)
                {
                    iVar27 = aiStack240[piVar17].x;
                    local_b0.Add(new Vector2Int(
                          iVar27 + (aiStack240[piVar7].x - iVar27) * (0x2ff8 - aiStack240[piVar17].y) /
                                    (aiStack240[piVar7].y - aiStack240[piVar17].y),
                          aiStack240[piVar17].z +
                          ((aiStack240[piVar7].z - aiStack240[piVar17].z) *
                          (0x2ff8 - aiStack240[piVar17].y)) /
                          (aiStack240[piVar7].y - aiStack240[piVar17].y)));
                    iVar24++;
                }
            }

            iVar26++;
            unaff_s6 = 0; //not in the original code

            if (7 < iVar26)
            {
                if (iVar24 != 0)
                {
                    iVar26 = 0x7fffffff;
                    iVar13 = 0x7fffffff;
                    iVar27 = 0;

                    if (0 < iVar24)
                    {
                        do
                        {
                            iVar8 = local_b0[iVar27].y;

                            if (iVar8 < iVar26 || (iVar8 == iVar26 && local_b0[iVar27].x < iVar13))
                            {
                                iVar13 = local_b0[iVar27].x;
                                iVar26 = iVar8;
                                unaff_s6 = iVar27;
                            }
                            iVar27++;
                        } while (iVar27 < iVar24);
                    }

                    local_b0[unaff_s6] = new Vector2Int(local_b0[0].x, local_b0[0].y);
                    local_b0[0] = new Vector2Int(iVar13, iVar26);
                    iVar27 = iVar24 - 1;
                    iVar8 = 1;

                    do
                    {
                        bVar3 = false;
                        iVar25 = iVar8;
                        local_28 = 0; //not in the original code

                        if (iVar8 < iVar27)
                        {
                            do
                            {
                                piVar7 = iVar8;
                                iVar5 = iVar8 + 1;
                                piVar11 = iVar5;
                                iVar14 = local_b0[piVar7].x;
                                iVar22 = local_b0[piVar11].y;
                                iVar9 = iVar14 - iVar13;
                                iVar21 = local_b0[piVar7].y;
                                iVar18 = local_b0[piVar11].x;
                                iVar19 = iVar18 - iVar13;
                                iVar6 = iVar9 * (iVar22 - iVar26) - (iVar21 - iVar26) * iVar19;

                                if (iVar6 == 0)
                                {
                                    iVar24--;
                                    iVar27--;

                                    if (iVar21 == iVar22)
                                    {
                                        if (iVar9 < 0)
                                            iVar9 = -iVar9;

                                        if (iVar19 < 0)
                                            iVar19 = -iVar19;

                                        bVar1 = iVar19 < iVar9;
                                    }
                                    else
                                        bVar1 = iVar22 < iVar21;

                                    iVar9 = iVar8 + (bVar1 ? 1 : 0);

                                    while (iVar9 < iVar24)
                                    {
                                        iVar19 = iVar9 + 1;
                                        iVar5 = local_b0[iVar19].y;
                                        local_b0[iVar9] = new Vector2Int(local_b0[iVar19].x, iVar5);
                                        iVar9 = iVar19;
                                    }

                                    iVar8--;
                                }
                                else
                                {
                                    if (iVar6 < 0)
                                    {
                                        local_b0[piVar7] = new Vector2Int(iVar18, local_b0[piVar11].y);
                                        local_b0[piVar11] = new Vector2Int(iVar14, iVar21);

                                        if (!bVar3)
                                        {
                                            iVar25 = 1;

                                            if (2 < iVar8)
                                                iVar25 = iVar8 - 1;

                                            bVar3 = true;
                                        }

                                        local_28 = iVar8;
                                    }
                                }

                                iVar8++;
                            } while (iVar8 < iVar27);
                        }

                        iVar27 = local_28;
                        iVar8 = iVar25;
                    } while (bVar3);

                    iVar27 = 0;
                    iVar26 = 0;

                    if (0 < iVar24)
                    {
                        piVar11 = 0;

                        do
                        {
                            if (1 < iVar26)
                            {
                                do
                                {
                                    iVar8 = iVar26 - 1;
                                    iVar13 = local_b0[iVar8].x;

                                    if ((local_b0[iVar8].y - local_b0[iVar26 - 2].y) *
                                        (local_b0[piVar11].x - iVar13) <=
                                        (iVar13 - local_b0[iVar26 - 2].x) * (local_b0[piVar11].y - local_b0[iVar8].y))
                                        break;

                                    iVar26 = iVar8;
                                } while (1 < iVar8);
                            }

                            iVar13 = local_b0[piVar11].y;
                            local_b0[iVar26] = new Vector2Int(local_b0[piVar11].x, iVar13);
                            iVar26++;
                            iVar27++;
                            piVar11++;
                        } while (iVar27 < iVar24);
                    }

                    Utilities.SetRotMatrix(DAT_F00.rotation);
                    Coprocessor.translationVector._trx = 0;
                    Coprocessor.translationVector._try = 0;
                    Coprocessor.translationVector._trz = 0; iVar24 = 0;
                    Utilities.SetColorMatrix(DAT_738);
                    Utilities.SetLightMatrix(DAT_718);
                    Utilities.SetBackColor(DAT_E04.r, DAT_E04.g, DAT_E04.b);
                    Utilities.SetFarColor(DAT_DA4.r, DAT_DA4.g, DAT_DA4.b);
                    DAT_1f800080 = 0x100; //DAT_CE0 + 0x100
                    Utilities.SetFogNearFar(DAT_DB6 << 8, DAT_DB4 << 8, DAT_ED8);
                    Coprocessor.colorCode.r = DAT_DDC.r;
                    Coprocessor.colorCode.g = DAT_DDC.g;
                    Coprocessor.colorCode.b = DAT_DDC.b;
                    Coprocessor.colorCode.code = DAT_DDC.a;

                    for (iVar24 = 0; iVar24 < 32; iVar24++)
                    {
                        Coprocessor.accumulator.ir1 = (short)(iVar24 << 7);
                        Coprocessor.ExecuteCC(12, true);
                        terrain.DAT_BA4F0[iVar24] = new Color32
                            (Coprocessor.colorFIFO.r2, Coprocessor.colorFIFO.g2, Coprocessor.colorFIFO.b2, Coprocessor.colorFIFO.cd2);
                        DAT_1f800000[iVar24] = new Color32
                            (terrain.DAT_B9370[iVar24].r, terrain.DAT_B9370[iVar24].g, terrain.DAT_B9370[iVar24].b, 52);
                    }

                    DAT_1f800094 = (short)(ushort)DAT_EDC;
                    DAT_1f800096 = (short)(ushort)DAT_F20;
                    DAT_1f800098 = (short)(DAT_DB6 << 8);
                    DAT_1f80009a = (short)(DAT_DB8 << 8);
                    FUN_1BECC(local_b0, iVar26);
                }

                return;
            }
        } while (true);
    }

    private void FUN_1BECC(List<Vector2Int> param1, int param2)
    {
        int piVar1;
        int iVar2;
        int iVar3;
        int iVar4;
        int piVar5;
        int iVar6;
        int in_t0;
        int in_t1;
        int iVar7;
        bool unaff_s0;
        int iVar8;
        int piVar9;
        int unaff_s4;
        int unaff_s5;
        int iVar10;
        int iVar11;
        int iVar12;

        iVar8 = 0;
        iVar11 = 0;
        iVar10 = param1[0].x;
        iVar2 = param1[0].y;

        if (iVar2 < 0)
            iVar2 += 1023;

        iVar7 = (iVar2 >> 10) << 2;
        iVar2 = (iVar2 >> 10) * 1024;
        piVar9 = 0;
        iVar12 = iVar10;
        unaff_s0 = false; //not in the original code
        unaff_s4 = 0; //not in the original code
        unaff_s5 = 0; //not in the original code
        in_t0 = 0; //not in the original code
        in_t1 = 0; //not in the original code

        do
        {
            iVar2 += 1024;
            iVar3 = param1[iVar8].y;
            iVar4 = iVar12;

            do
            {
                if (iVar2 <= iVar3) break;

                unaff_s4 = param1[iVar8].x;
                in_t0 = param1[iVar8].y;

                if (unaff_s4 < iVar4)
                    iVar4 = unaff_s4;

                if (iVar8 == 0)
                    iVar8 = param2;

                iVar8--;
                iVar3 = param1[iVar8].y;
                unaff_s0 = iVar3 < in_t0;
            } while (!unaff_s0);

            iVar3 = iVar10;

            if (param1[piVar9].y < iVar2)
            {
                piVar5 = iVar11;

                do
                {
                    unaff_s5 = param1[piVar5].x;
                    in_t1 = param1[piVar5].y;

                    if (iVar3 < unaff_s5)
                        iVar3 = unaff_s5;

                    piVar9++;
                    iVar11++;
                    unaff_s0 = false;

                    if (param1[piVar5 + 1].y < in_t1 || iVar11 == param2)
                        unaff_s0 = true;

                    if (unaff_s0) goto LAB_1C0A4;

                    piVar1 = piVar5 + 1;
                    piVar5++;
                } while (param1[piVar1].y < iVar2);
            }

            if (!unaff_s0)
            {
                iVar12 = unaff_s4 +
                        (param1[iVar8].x - unaff_s4) * (iVar2 - in_t0) /
                        (param1[iVar8].y - in_t0);
                iVar10 = unaff_s5 + (param1[piVar9].x - unaff_s5) * (iVar2 - in_t1) / (param1[piVar9].y - in_t1);

                if (iVar12 < iVar4)
                    iVar4 = iVar12;

                if (iVar3 < iVar10)
                    iVar3 = iVar10;
            }

            LAB_1C0A4:
            iVar6 = iVar3 + 1023;

            if (iVar4 < 0)
                iVar4 += 1023;

            if (iVar6 < 0)
                iVar6 = iVar3 + 2046;

            terrain.FUN_1BE68((iVar4 >> 10) << 2, (iVar6 >> 10) << 2, iVar7);
            iVar7 += 4;

            if (unaff_s0)
                return;
        } while (true);
    }

    private int FUN_1E354(Vector3Int v3)
    {
        int iVar1;
        int iVar2;

        iVar1 = Utilities.FUN_29E84(v3);
        iVar2 = iVar1 + 0x200000;

        if (iVar2 < 0)
            iVar2 = iVar1 + 0x200fff;

        return (DAT_E1C << 9) / (iVar2 >> 12);
    }

    private int FUN_1E39C(Vector3Int v3)
    {
        int iVar1;
        int iVar2;
        uint uVar3;
        int iVar4;

        iVar1 = Utilities.FUN_29E84(v3);
        iVar2 = iVar1 + 0x200000;

        if (iVar2 < 0)
            iVar2 = iVar1 + 0x200fff;

        iVar4 = (DAT_E1C << 9) / (iVar2 >> 12);
        iVar2 = Utilities.LeadingZeros(iVar1);
        uVar3 = 12;

        if ((int)(iVar2 - 1U) < 12)
            uVar3 = (uint)(iVar2 - 1U);

        if (iVar1 == 0)
            iVar1 = 0;
        else
            iVar1 = (v3.x << (int)(uVar3 & 31)) / (iVar1 >> (int)(12 - uVar3 & 31));

        iVar2 = (4096 - iVar1) * iVar4;

        if (iVar2 < 0)
            iVar2 += 8191;

        iVar4 = (iVar1 + 4096) * iVar4;

        if (iVar4 < 0)
            iVar4 += 8191;

        return iVar2 >> 13 | (iVar4 >> 13) << 16;
    }

    public uint FUN_1E478(Vector3Int pos)
    {
        short sVar1;
        short sVar2;
        int iVar3;
        uint uVar4;
        Vector3Int auStack24;
        Vector3Int auStack8;

        auStack24 = Utilities.FUN_24148(DAT_F00, pos);

        if (screenMode == _SCREEN_MODE.Whole)
        {
            if (!DAT_83B)
                uVar4 = (uint)FUN_1E39C(auStack24);
            else
            {
                iVar3 = FUN_1E354(auStack24);
                uVar4 = (uint)((iVar3 * 0x10000 >> 16) + iVar3 * 0x10000);
            }
        }
        else
        {
            auStack8 = Utilities.FUN_24148(terrain.DAT_BDFF0, pos);

            if (!DAT_83B) 
            {
                iVar3 = FUN_1E354(auStack24);
                sVar1 = (short)FUN_1E354(auStack8);
                uVar4 = (uint)(iVar3 << 16 | (int)sVar1);
            }
            else
            {
                sVar1 = (short)FUN_1E354(auStack24);
                sVar2 = (short)FUN_1E354(auStack8);
                iVar3 = DAT_E1C;

                if (sVar1 + sVar2 < DAT_E1C)
                    iVar3 = sVar1 + sVar2;

                uVar4 = (uint)(iVar3 * 0x10001);
            }
        }

        return uVar4;
    }

    public void FUN_2D278(VigObject param1, int param2)
    {
        VigTransform tVar1;

        tVar1 = FUN_2CDF4(param1);
        FUN_2E0E8(tVar1, param2);
    }

    public VigTransform FUN_2CDF4(VigObject obj)
    {
        VigTransform m1 = obj.vTransform;

        while (true)
        {
            obj = Utilities.FUN_2CD78(obj);

            if (obj == null) break;

            DAT_EA8 = Utilities.CompMatrixLV(obj.vTransform, m1);
            m1 = DAT_EA8;
        }

        return m1;
    }

    private void FUN_2E0E8(VigTransform param1, int param2)
    {
        DAT_F28 = param1;
        DAT_F88 = DAT_F28;
        DAT_F00 = Utilities.FUN_2A3EC(param1);
        DAT_ED8 = param2;
        Utilities.FUN_5A21C(param2);
        DAT_F48 = Utilities.FUN_247C4(DAT_F68, param1.rotation);
        //FUN_2DFF0
        DAT_EE0 = DAT_F00;
        DAT_EE0.rotation = Utilities.FUN_2A4A4(DAT_EE0.rotation);
    }

    public static uint FUN_2AC5C()
    {
        uint uVar1 = DAT_63A64; //r8
        uint uVar2 = (uint)(byte)DAT_63A68 << 31; //r9
        DAT_63A68 = (byte)uVar1;
        uint uVar3 = (uVar1 >> 1) + uVar2;
        uVar1 = uVar1 << 12;
        uVar3 = uVar3 ^ uVar1;
        uVar1 = uVar3 >> 20;
        uVar3 = uVar3 ^ uVar1;
        DAT_63A64 = uVar3;
        return uVar3 & 0x7FFF;
    }
}